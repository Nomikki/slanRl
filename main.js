/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/actor.js":
/*!**********************!*\
  !*** ./src/actor.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Actor)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _pickable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pickable */ \"./src/pickable.js\");\n\n\n\n\n\nclass Actor {\n  constructor(x, y, ch, name, color) {\n    this.x = x | 0;\n    this.y = y | 0;\n    this.ch = ch;\n    this.color = color;\n    this.name = name;\n\n    this.fov = null;\n    this.fovOnly = true;\n    this.blocks = true; //can we walk on this actor?\n\n    // Destructible: Something that can take damage and potentially break or die\n    this.destructible = null;\n\n    // Attacker: Something that can deal damage to a Destructible\n    this.attacker = null;\n\n    // Ai: Something that is self-updating\n    this.ai = null;\n\n    // Pickable: Something that can be picked and used\n    this.pickable = null;\n\n    // Container: Something that can contain actors\n    this.container = null;\n  }\n\n  create(actorTemplate) {\n    //console.log(actorTemplate);\n    if (actorTemplate.pickable.type === \"lightingBolt\")\n      this.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_1__.LightningBolt(\n        actorTemplate.pickable.range,\n        actorTemplate.pickable.damage\n      );\n\n    if (actorTemplate.pickable.type === \"fireBall\")\n      this.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_1__.Fireball(\n        actorTemplate.pickable.range,\n        actorTemplate.pickable.damage\n      );\n\n    if (actorTemplate.pickable.type === \"healer\")\n      this.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_1__.Healer(actorTemplate.pickable.amount);\n\n    if (actorTemplate.pickable.type === \"confuser\")\n      this.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_1__.Confuser(\n        actorTemplate.pickable.nbTurns,\n        actorTemplate.pickable.range\n      );\n  }\n\n  render() {\n    const fovValue = ___WEBPACK_IMPORTED_MODULE_0__.game.player.fov.getMapped(this.x, this.y);\n    if (fovValue === 2 || (fovValue != 0 && !this.fovOnly)) {\n      ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(this.ch, this.x, this.y, this.color);\n    }\n  }\n\n  async update() {\n    if (this.ai) {\n      await this.ai.update(this);\n    }\n  }\n\n  computeFov() {\n    if (this.fov) {\n      this.fov.compute(this.x, this.y, 10);\n    }\n  }\n\n  getDistance(x, y) {\n    const dx = this.x - x;\n    const dy = this.y - y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/actor.js?");

/***/ }),

/***/ "./src/ai.js":
/*!*******************!*\
  !*** ./src/ai.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"default\": () => (/* binding */ AI),\n/* harmony export */   \"PlayerAI\": () => (/* binding */ PlayerAI),\n/* harmony export */   \"MonsterAI\": () => (/* binding */ MonsterAI),\n/* harmony export */   \"ConfusedAI\": () => (/* binding */ ConfusedAI)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random */ \"./src/random.js\");\n\n\n\n\nconst random = new _random__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\nclass AI {\n  constructor() {}\n\n  update(owner) {}\n}\n\nclass PlayerAI extends AI {\n  constructor() {\n    super();\n  }\n\n  async update(owner) {\n    if (owner.destructible && owner.destructible.isDead()) return;\n\n    let dx = 0;\n    let dy = 0;\n    const ch = await ___WEBPACK_IMPORTED_MODULE_0__.game.getch();\n\n    switch (ch) {\n      case \"ArrowLeft\":\n        dx--;\n        break;\n      case \"ArrowRight\":\n        dx++;\n        break;\n      case \"ArrowUp\":\n        dy--;\n        break;\n      case \"ArrowDown\":\n        dy++;\n        break;\n      default:\n        await this.handleActionKey(owner, ch);\n        break;\n    }\n\n    if (dx !== 0 || dy !== 0) {\n      ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.NEW_TURN;\n\n      if (this.moveOrAttack(owner, owner.x + dx, owner.y + dy)) {\n        ___WEBPACK_IMPORTED_MODULE_0__.game.player.computeFov();\n      }\n    }\n  }\n\n  async handleActionKey(owner, ascii) {\n    console.log(ascii);\n\n    switch (ascii) {\n      case \"S\": //save\n        ___WEBPACK_IMPORTED_MODULE_0__.game.save();\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Game saved...\", \"#0FA\");\n        break;\n\n      case \">\": //go down\n        if (___WEBPACK_IMPORTED_MODULE_0__.game.stairs.x === owner.x && ___WEBPACK_IMPORTED_MODULE_0__.game.stairs.y === owner.y)\n        {\n          ___WEBPACK_IMPORTED_MODULE_0__.game.nextLevel();\n        } else {\n          ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"There are no stairs here.\");\n        }\n        break;\n      case \"g\": //pickup item\n        ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.NEW_TURN;\n        let found = false;\n        for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\n          if (actor.pickable && actor.x === owner.x && actor.y === owner.y) {\n            if (actor.pickable.pick(actor, owner)) {\n              found = true;\n              ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"You pick up the \" + actor.name, \"#AAA\");\n              break;\n            } else if (!found) {\n              found = true;\n              ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Your inventory is full.\", \"#F00\");\n            }\n          }\n        }\n        if (!found) {\n          ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"There's nothing here that you can pick up.\");\n        }\n        break;\n\n      case \"i\": //use item\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Use item\");\n        const useItem = await this.choseFromInventory(owner);\n        if (useItem) {\n          await useItem.pickable.use(useItem, owner);\n          ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.NEW_TURN;\n        } else {\n          ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Nevermind...\");\n        }\n        break;\n\n      case \"d\": //drop item\n        const dropItem = await this.choseFromInventory(owner);\n        if (dropItem) {\n          await dropItem.pickable.drop(dropItem, owner);\n          ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.NEW_TURN;\n        } else {\n          ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Nevermind...\");\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  moveOrAttack(owner, targetX, targetY) {\n    if (___WEBPACK_IMPORTED_MODULE_0__.game.map.isWall(targetX, targetY)) return false;\n\n    for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\n      if (\n        actor.destructible &&\n        !actor.destructible.isDead() &&\n        actor.x === targetX &&\n        actor.y === targetY\n      ) {\n        owner.attacker.attack(owner, actor);\n        return false;\n      }\n    }\n\n    //look for corpses or items\n    for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\n      const corpseOrItem =\n        (actor.destructible && actor.destructible.isDead) || actor.pickable;\n\n      if (corpseOrItem && actor.x === targetX && actor.y === targetY) {\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"There is a \" + actor.name + \" here\");\n      }\n    }\n\n    owner.x = targetX;\n    owner.y = targetY;\n    return true;\n  }\n\n  async choseFromInventory(owner) {\n    ___WEBPACK_IMPORTED_MODULE_0__.game.clear();\n    ___WEBPACK_IMPORTED_MODULE_0__.game.render();\n    for (let y = 0; y < 28; y++) {\n      for (let x = 0; x < 40; x++) {\n        if ((y === 0 || y === 27) && x > 0 && x < 39)\n          ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\"-\", x + 20, y, \"#AAA\");\n        else if ((x === 0 || x === 39) && y > 0 && y < 27)\n          ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\"|\", x + 20, y, \"#AAA\");\n        else if (y === 0 || x === 0 || y === 27 || x === 39)\n          ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\"+\", x + 20, y, \"#AAA\");\n        else ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\" \", x + 20, y);\n      }\n    }\n    ___WEBPACK_IMPORTED_MODULE_0__.game.drawText(\" INVENTORY \", 34, 0);\n    //game.renderUI();\n\n    let shortcut = \"a\";\n    let i = 0;\n    for (const it of owner.container.inventory) {\n      ___WEBPACK_IMPORTED_MODULE_0__.game.drawText(shortcut + \") \" + it.name, 22, 2 + i);\n      shortcut = String.fromCharCode(shortcut.charCodeAt(0) + 1);\n      i++;\n    }\n\n    let ch = await ___WEBPACK_IMPORTED_MODULE_0__.game.getch();\n    const actorIndex = ch.charCodeAt(0) - 97; //97 = a\n    if (actorIndex >= 0 && actorIndex < owner.container.inventory.length) {\n      return owner.container.inventory[actorIndex];\n    }\n    return null;\n  }\n}\n\nclass MonsterAI extends AI {\n  constructor() {\n    super();\n    this.moveCount = 0;\n\n    this.Constants = Object.freeze({\n      TRACKING_TURNS: 3,\n    });\n  }\n\n  async update(owner) {\n    if (owner.destructible && owner.destructible.isDead()) return;\n\n    if (___WEBPACK_IMPORTED_MODULE_0__.game.player.fov.isInFov(owner.x, owner.y)) {\n      this.moveCount = this.Constants.TRACKING_TURNS;\n    } else {\n      this.moveCount--;\n    }\n\n    if (this.moveCount > 0) {\n      this.moveOrAttack(owner, ___WEBPACK_IMPORTED_MODULE_0__.game.player.x, ___WEBPACK_IMPORTED_MODULE_0__.game.player.y);\n    }\n  }\n\n  moveOrAttack(owner, targetX, targetY) {\n    let dx = targetX - owner.x;\n    let dy = targetY - owner.y;\n    const stepdx = dx > 0 ? 1 : -1;\n    const stepdy = dy > 0 ? 1 : -1;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (distance >= 2) {\n      dx = Math.round(dx / distance);\n      dy = Math.round(dy / distance);\n\n      if (___WEBPACK_IMPORTED_MODULE_0__.game.map.canWalk(owner.x + dx, owner.y + dy)) {\n        owner.x += dx | 0;\n        owner.y += dy | 0;\n      } else if (___WEBPACK_IMPORTED_MODULE_0__.game.map.canWalk(owner.x + stepdx, owner.y)) {\n        owner.x += stepdx | 0;\n      } else if (___WEBPACK_IMPORTED_MODULE_0__.game.map.canWalk(owner.x, owner.y + stepdy)) {\n        owner.y += stepdy | 0;\n      }\n    } else {\n      owner.attacker.attack(owner, ___WEBPACK_IMPORTED_MODULE_0__.game.player);\n    }\n  }\n}\n\nclass ConfusedAI extends AI {\n  constructor(nbTurns, oldAi) {\n    super();\n    this.nbTurns = nbTurns;\n    this.oldAi = oldAi;\n  }\n\n  async update(owner) {\n    const dx = random.getInt(-1, 1);\n    const dy = random.getInt(-1, 1);\n\n    if (dx !== 0 || dy !== 0) {\n      const destx = owner.x + dx;\n      const desty = owner.y + dy;\n\n      if (___WEBPACK_IMPORTED_MODULE_0__.game.map.canWalk(destx, desty)) {\n        owner.x = destx;\n        owner.y = desty;\n      } else {\n        const actor = ___WEBPACK_IMPORTED_MODULE_0__.game.getActor(destx, desty);\n        if (actor) {\n          owner.attacker.attack(owner, actor);\n        }\n      }\n    }\n    this.nbTurns--;\n    if (this.nbTurns <= 0) {\n      owner.ai = this.oldAi;\n    }\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/ai.js?");

/***/ }),

/***/ "./src/attacker.js":
/*!*************************!*\
  !*** ./src/attacker.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Attacker)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n\n\n\n\nclass Attacker {\n  constructor(power) {\n    this.power = power;\n  }\n\n  attack(owner, target) {\n    if (target.destructible && !target.destructible.isDead()) {\n      if (this.power - target.destructible.defense > 0) {\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\n          owner.name +\n            \" attacks \" +\n            target.name +\n            \" for \" +\n            (this.power - target.destructible.defense) +\n            \" hit points.\", owner === ___WEBPACK_IMPORTED_MODULE_0__.game.player ? \"#DDD\" : \"#AAA\"\n        );\n      } else {\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\n          owner.name + \" attacks \" + target.name + \" but it has no effect!\"\n        );\n      }\n      target.destructible.takeDamage(target, this.power);\n    } else {\n      ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(owner.name + \" attacks \" + target.name + \" in vain.\");\n    }\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/attacker.js?");

/***/ }),

/***/ "./src/bsp_generator.js":
/*!******************************!*\
  !*** ./src/bsp_generator.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rectangle.js */ \"./src/rectangle.js\");\n/* harmony import */ var _bsp_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bsp_node.js */ \"./src/bsp_node.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./random.js */ \"./src/random.js\");\n\n\n\n\n\n\nconst random = new _random_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n\nclass bspGenerator {\n  constructor(x, y, w, h, maxLevel = 5) {\n    this.maxLevel = maxLevel;\n\n    this.rootContainer = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x + 1, y + 1, w - 2, h - 2);\n\n    this.rows = h;\n    this.cols = w;\n\n    this.map = [];\n    this.doorPlaces = [];\n    this.tempRooms = [];\n\n    for (let h = 0; h < this.rows; h++) {\n      for (let w = 0; w < this.cols; w++) {\n        const index = this.cols * h + w;\n        this.map[index] = 1;\n      }\n    }\n\n    this.tree = this.Devide(this.rootContainer, 0);\n    this.rooms = this.tree.GetLeafs();\n    this.CreateRooms();\n    this.ConnectRooms(this.tree);\n  }\n\n  RandomSplit(container) {\n    let r1, r2;\n\n    let splitVertical = random.getInt(0, 1);\n\n    if (container.w > container.h && container.w / container.h >= 0.05) {\n      splitVertical = true;\n    } else {\n      splitVertical = false;\n    }\n\n    if (splitVertical) {\n      //Vertical\n      const w = random.getInt(container.w * 0.3, container.w * 0.6);\n      r1 = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](container.x, container.y, w, container.h);\n      r2 = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n        container.x + w,\n        container.y,\n        container.w - w,\n        container.h\n      );\n    } else {\n      //horizontal\n      const h = random.getInt(container.h * 0.3, container.h * 0.6);\n      r1 = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](container.x, container.y, container.w, h);\n      r2 = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n        container.x,\n        container.y + h,\n        container.w,\n        container.h - h\n      );\n    }\n    return [r1, r2];\n  }\n\n  Devide(container, level) {\n    const root = new _bsp_node_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](container);\n\n    if (level < this.maxLevel) {\n      const sr = this.RandomSplit(container);\n      root.A = this.Devide(sr[0], level + 1);\n      root.B = this.Devide(sr[1], level + 1);\n    }\n    return root;\n  }\n\n  CreateRooms() {\n    //for (let i = 0; i < this.rooms.length; i++) {\n    for (const room of this.rooms) {\n      const w = random.getInt(room.w * 0.5, room.w * 0.9);\n      const h = random.getInt(room.h * 0.5, room.h * 0.9);\n      const x = random.getInt(room.x, room.x + room.w - w);\n      const y = random.getInt(room.y, room.y + room.h - h);\n\n      let rect = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x, y, x + w, y + h);\n      this.tempRooms.push(rect);\n\n      for (let hi = y; hi < y + h; hi++) {\n        for (let wi = x; wi < x + w; wi++) {\n          const index = this.cols * hi + wi;\n          this.map[index] = 0;\n        }\n      }\n    }\n  }\n\n  IsThereRoom(x, y) {\n    for (const room of this.tempRooms) {\n      if (x >= room.x && y >= room.y && x <= room.w && y <= room.h) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  ConnectRooms(node) {\n    if (node.A === null || node.B === null) return false;\n\n    const x1 = node.A.leaf.GetCenterX() >> 0;\n    const y1 = node.A.leaf.GetCenterY() >> 0;\n\n    const x2 = node.B.leaf.GetCenterX() >> 0;\n    const y2 = node.B.leaf.GetCenterY() >> 0;\n\n    let doorsCreated = false;\n    let lastWasInRoom = false;\n\n    for (let x = Math.min(x1, x2); x <= Math.max(x1, x2); x++) {\n      const index = this.cols * Math.max(y1, y2) + x;\n      this.map[index] = 0;\n\n      if (!doorsCreated && this.IsThereRoom(x, Math.max(y1, y2)) === true) {\n        lastWasInRoom = true;\n      } else if (\n        !doorsCreated &&\n        this.IsThereRoom(x, Math.max(y1, y2)) === false\n      ) {\n        if (lastWasInRoom === true) {\n          doorsCreated = true;\n          let re = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x, Math.max(y1, y2), 0, 0);\n          this.doorPlaces.push(re);\n        }\n      }\n    }\n    doorsCreated = false;\n\n    for (let y = Math.min(y1, y2); y <= Math.max(y1, y2); y++) {\n      const index = this.cols * y + Math.max(x1, x2);\n      this.map[index] = 0;\n      if (!doorsCreated && this.IsThereRoom(Math.max(x1, x2), y) === true) {\n        lastWasInRoom = true;\n      } else if (\n        !doorsCreated &&\n        this.IsThereRoom(Math.max(x1, x2), y) === false\n      ) {\n        if (lastWasInRoom === true) {\n          doorsCreated = true;\n          let re = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.max(x1, x2), y, 0, 0);\n          this.doorPlaces.push(re);\n        }\n      }\n    }\n\n    this.ConnectRooms(node.A);\n    this.ConnectRooms(node.B);\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bspGenerator);\n\n\n//# sourceURL=webpack://slanrl/./src/bsp_generator.js?");

/***/ }),

/***/ "./src/bsp_node.js":
/*!*************************!*\
  !*** ./src/bsp_node.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rectangle.js */ \"./src/rectangle.js\");\n\n\n\n\nclass bspNode extends _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(leaf) {\n    super(leaf);\n    this.A = null;\n    this.B = null;\n    this.leaf = leaf;\n  }\n\n  GetLeafs() {\n    if (this.A === null && this.B === null) {\n      return [this.leaf];\n    } else {\n      return [].concat(this.A.GetLeafs(), this.B.GetLeafs());\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bspNode);\n\n\n//# sourceURL=webpack://slanrl/./src/bsp_node.js?");

/***/ }),

/***/ "./src/container.js":
/*!**************************!*\
  !*** ./src/container.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Container)\n/* harmony export */ });\n\n\nclass Container {\n  constructor(size) {\n    this.size = size; //maximum number of actors\n    this.inventory = new Array();\n  }\n\n  add(actor) {\n    if (this.size > 0 && this.inventory.length >= this.size) {\n      //inventory is full\n      return false;\n    } else {\n      this.inventory.push(actor);\n      return true;\n    }\n  }\n\n  remove(actor) {\n    for (let i = 0; i < this.inventory.length; i++) {\n      if (this.inventory[i] === actor) {\n        this.inventory.splice(i, 1);\n        return;\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/container.js?");

/***/ }),

/***/ "./src/destructible.js":
/*!*****************************!*\
  !*** ./src/destructible.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Destructible),\n/* harmony export */   \"MonsterDestructible\": () => (/* binding */ MonsterDestructible),\n/* harmony export */   \"PlayerDestructible\": () => (/* binding */ PlayerDestructible)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n\n\n\n\nclass Destructible {\n  constructor(maxHP, defense, corpseName, type) {\n    this.maxHP = maxHP;\n    this.hp = this.maxHP;\n    this.defense = defense;\n    this.corpseName = corpseName;\n    this.type = type;\n  }\n\n  isDead() {\n    return this.hp <= 0;\n  }\n\n  heal(amount) {\n    this.hp += amount;\n    if (this.hp > this.maxHP) {\n      amount -= this.hp - this.maxHP;\n      this.hp = this.maxHP;\n    }\n    return amount;\n  }\n\n  takeDamage(owner, damage) {\n    damage -= this.defense;\n\n    if (damage > 0) {\n      this.hp -= damage;\n      if (this.hp <= 0) {\n        this.die(owner);\n      }\n    } else {\n      damage = 0;\n    }\n    return damage;\n  }\n\n  die(owner) {\n    owner.ch = \"%\";\n    owner.color = \"#AA0000\";\n    owner.name = this.corpseName;\n    owner.blocks = false;\n    ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(owner);\n  }\n}\n\nclass MonsterDestructible extends Destructible {\n  constructor(maxHP, defense, corpseName) {\n    super(maxHP, defense, corpseName, \"monster\");\n  }\n\n  die(owner) {\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(owner.name + \" is dead\");\n    super.die(owner);\n  }\n}\n\nclass PlayerDestructible extends Destructible {\n  constructor(maxHP, defense, corpseName) {\n    super(maxHP, defense, corpseName, \"player\");\n  }\n\n  die(owner) {\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"You died\", \"#A00\");\n    super.die(owner);\n    ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.DEFEAT;\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/destructible.js?");

/***/ }),

/***/ "./src/fov.js":
/*!********************!*\
  !*** ./src/fov.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fov)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n\n\n\n\nclass Fov {\n  constructor(w, h) {\n    this.width = w;\n    this.height = h;\n\n    this.mapped = new Array(this.width * this.height).fill(0);\n  }\n\n  clear() {\n    for (let i = 0; i < this.width * this.height; i++) {\n      if (this.mapped[i] === 2) {\n        this.mapped[i] = 1;\n      }\n    }\n  }\n\n  fullClear() {\n    this.mapped = new Array(this.width * this.height).fill(0);\n  }\n\n  float2int(value) {\n    return value | 0;\n  }\n\n  /* Just a placeholder */\n  compute(x, y, len) {\n    this.clear();\n\n    let dx = 0;\n    let dy = 0;\n    let px = 0;\n    let py = 0;\n\n    this.mapped[x + y * this.width] = 2;\n\n    for (let a = 0; a < 360; a++) {\n      dx = Math.sin((a / 3.1415) * 180.0);\n      dy = Math.cos((a / 3.1415) * 180.0);\n\n      px = x + 0.5;\n      py = y + 0.5;\n      \n\n      for (let l = 0; l < len; l++) {\n        px += dx;\n        py += dy;\n\n        if (px <= 0 || px >= this.width || py <= 0 || py >= this.height) {\n          break;\n        }\n\n        const id = this.float2int(px) + this.float2int(py) * this.width;\n        this.mapped[id] = 2;\n\n        if (___WEBPACK_IMPORTED_MODULE_0__.game.map.isWall(this.float2int(px), this.float2int(py)) === true) {\n          break;\n        }\n      }\n    }\n  }\n\n  getMapped(x, y) {\n    if (x >= 0 && y >= 0 && x < this.width && y < this.height)\n      return this.mapped[x + y * this.width];\n    else return 2;\n  }\n\n  isInFov(x, y) {\n    if (x >= 0 && y >= 0 && x < this.width && y < this.height) {\n      return this.mapped[x + y * this.width] > 0;\n    }\n\n    return false;\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/fov.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"game\": () => (/* binding */ game)\n/* harmony export */ });\n/* harmony import */ var _actor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actor */ \"./src/actor.js\");\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ \"./src/map.js\");\n/* harmony import */ var _fov__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fov */ \"./src/fov.js\");\n/* harmony import */ var _destructible__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./destructible */ \"./src/destructible.js\");\n/* harmony import */ var _attacker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./attacker */ \"./src/attacker.js\");\n/* harmony import */ var _ai__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ai */ \"./src/ai.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./log */ \"./src/log.js\");\n/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./container */ \"./src/container.js\");\n/* harmony import */ var _pickable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pickable */ \"./src/pickable.js\");\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./menu */ \"./src/menu.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Game {\n  constructor() {\n    this.GameStatus = Object.freeze({\n      STARTUP: 0,\n      IDLE: 1,\n      NEW_TURN: 2,\n      VICTORY: 3,\n      DEFEAT: 4,\n    });\n\n    this.player = null;\n    this.map = null;\n    this.stairs = null;\n\n    this.canvas = document.getElementById(\"screen\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.ctx.font = \"12px Arial\";\n    this.fontSize = 12;\n    this.ctx.textAlign = \"center\";\n\n    this.log = new _log__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n\n    this.lastKey = 0;\n    this.depth = 0;\n\n    this.width = 80;\n    this.height = 40;\n\n    this.actors = new Array();\n    this.map = new _map__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.width, this.height);\n  }\n\n  async term() {\n    this.log = new _log__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n    this.actors = new Array();\n    this.map = new _map__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.width, this.height);\n    this.player = null;\n  }\n\n  async init(withActors, createPlayer = true) {\n    this.map.generate(withActors, this.masterSeed, this.depth);\n\n    if (withActors) {\n      let i = 0;\n      if (createPlayer) {\n        i = this.actors.push(new _actor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2, 2, \"@\", \"hero\", \"#CCC\")) - 1;\n        this.player = this.actors[i];\n        this.player.destructible = new _destructible__WEBPACK_IMPORTED_MODULE_3__.PlayerDestructible(\n          30,\n          2,\n          \"your cadaver\"\n        );\n        this.player.attacker = new _attacker__WEBPACK_IMPORTED_MODULE_4__[\"default\"](5);\n        this.player.ai = new _ai__WEBPACK_IMPORTED_MODULE_5__.PlayerAI();\n        this.player.container = new _container__WEBPACK_IMPORTED_MODULE_7__[\"default\"](26);\n        this.player.fov = new _fov__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.width, this.height);\n      }\n\n      this.player.x = this.map.startX;\n      this.player.y = this.map.startY;\n      this.player.fov.fullClear();\n\n      i = this.actors.push(new _actor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, 0, \">\", \"stairs\", \"#FFF\")) - 1;\n      this.stairs = this.actors[i];\n      this.stairs.blocks = false;\n      this.stairs.fovOnly = false;\n      this.stairs.x = this.map.stairsX;\n      this.stairs.y = this.map.stairsY;\n\n      this.log.add(\"Welcome stranger!\", \"#FFF\");\n    } else {\n      this.log.add(\"Welcome back stranger!\", \"#FFF\");\n    }\n\n    this.gameStatus = this.GameStatus.STARTUP;\n  }\n\n  async nextLevel() {\n    this.depth++;\n    this.log.add(\"You take steps down.\");\n\n    this.map = null;\n    this.stairs = null;\n\n    const tempPlayer = this.player;\n    this.actors = new Array();\n    this.map = new _map__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.width, this.height);\n    this.init(true, false);\n    this.actors.push(tempPlayer);\n\n    this.save();\n  }\n\n  async newGame() {\n    console.log(\"New game!\");\n    this.masterSeed = (Math.random() * 0x7ffffff) | 0;\n    this.depth = 1;\n    await this.term();\n    await this.init(true);\n    await this.save();\n  }\n\n  async continueGame() {\n    console.log(\"Continue\");\n\n    if (window.localStorage.getItem(\"seed\") !== null) {\n      const savedVersion = window.localStorage.getItem(\"version\");\n      if (savedVersion === null)\n        window.localStorage.setItem(\"version\", \"v0.0.1a\");\n\n      this.masterSeed = window.localStorage.getItem(\"seed\");\n      this.depth = window.localStorage.getItem(\"depth\") | 0;\n\n      await this.init(false);\n\n      const tempUsers = JSON.parse(\n        window.localStorage.getItem(\"actors\") || \"[]\"\n      );\n      const playerID = window.localStorage.getItem(\"playerID\");\n\n      //console.log(\"temps: \" + tempUsers.length);\n\n      for (const actor of tempUsers) {\n        const i =\n          this.actors.push(\n            new _actor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](actor.x, actor.y, actor.ch, actor.name, actor.color)\n          ) - 1;\n\n        this.actors[i].ai = null;\n\n        if (actor.fov) {\n          this.actors[i].fov = new _fov__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.width, this.height);\n          this.actors[i].fov.mapped = actor.fov.mapped;\n        }\n\n        if (actor.container) {\n          this.actors[i].container = await new _container__WEBPACK_IMPORTED_MODULE_7__[\"default\"](26);\n\n          for (const it of actor.container.inventory) {\n            const k =\n              this.actors[i].container.inventory.push(\n                new _actor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](it.x, it.y, it.ch, it.name, it.color)\n              ) - 1;\n            this.actors[i].container.inventory[k].create(it);\n          }\n        }\n\n        if (actor.attacker) {\n          this.actors[i].attacker = new _attacker__WEBPACK_IMPORTED_MODULE_4__[\"default\"](actor.attacker.power);\n        }\n\n        if (actor.pickable) {\n          this.actors[i].create(actor);\n        }\n\n        if (actor.name === \"stairs\") {\n          this.stairs = this.actors[i];\n        }\n\n        if (actor.destructible) {\n          if (actor.destructible.type === \"player\") {\n            this.player = this.actors[i];\n            this.actors[i].destructible = new _destructible__WEBPACK_IMPORTED_MODULE_3__.PlayerDestructible(\n              30,\n              2,\n              \"player corpse\"\n            );\n\n            this.actors[i].ai = new _ai__WEBPACK_IMPORTED_MODULE_5__.PlayerAI();\n\n            this.actors[i].destructible.hp = actor.destructible.hp;\n            this.actors[i].destructible.maxHP = actor.destructible.maxHP;\n            this.actors[i].destructible.defense = actor.destructible.defense;\n            this.actors[i].destructible.corpseName =\n              actor.destructible.corpseName;\n          }\n          if (actor.destructible.type === \"monster\") {\n            this.actors[i].destructible = new _destructible__WEBPACK_IMPORTED_MODULE_3__.MonsterDestructible(\n              1,\n              1,\n              \"monster corpse\"\n            );\n\n            this.actors[i].destructible.hp = actor.destructible.hp;\n            this.actors[i].destructible.maxHP = actor.destructible.maxHP;\n            this.actors[i].destructible.defense = actor.destructible.defense;\n            this.actors[i].destructible.corpseName =\n              actor.destructible.corpseName;\n\n            this.actors[i].ai = new _ai__WEBPACK_IMPORTED_MODULE_5__.MonsterAI();\n          }\n        }\n      }\n\n      //console.log(this.actors);\n    }\n  }\n\n  async load() {\n    if (window.localStorage.getItem(\"version\") !== \"v0.0.1a\")\n      window.localStorage.clear();\n    this.menu = new _menu__WEBPACK_IMPORTED_MODULE_9__.Menu();\n    this.menu.clear();\n    if (window.localStorage.getItem(\"depth\"))\n      this.menu.addItem(this.menu.constants.CONTINUE, \"Continue\");\n    this.menu.addItem(this.menu.constants.NEW_GAME, \"New Game\");\n\n    //this.menu.addItem(this.menu.constants.EXIT, \"Exit\");\n\n    let cursor = 0;\n    let selectedItem = -1;\n    while (true) {\n      this.clear();\n      this.drawChar(\">\", this.width / 2 - 12, 10 + cursor, \"#FFF\");\n      for (let i = 0; i < this.menu.items.length; i++) {\n        this.drawText(this.menu.items[i].label, this.width / 2 - 10, 10 + i);\n      }\n\n      const ch = await this.getch();\n      if (ch === \"ArrowDown\") cursor++;\n      if (ch === \"ArrowUp\") cursor--;\n      if (ch === \"Enter\") {\n        selectedItem = this.menu.items[cursor].code;\n        break;\n      }\n\n      cursor = cursor % this.menu.items.length;\n      if (cursor < 0) cursor = this.menu.items.length - 1;\n    }\n\n    if (selectedItem != -1) {\n      if (selectedItem === this.menu.constants.NEW_GAME) {\n        await this.newGame();\n      }\n\n      if (selectedItem === this.menu.constants.CONTINUE) {\n        await this.continueGame();\n      }\n    }\n  }\n\n  async save() {\n    if (this.player.destructible.isDead()) {\n      window.localStorage.clear();\n    } else {\n      this.map.save();\n      window.localStorage.setItem(\"playerID\", this.actors.indexOf(this.player));\n      window.localStorage.setItem(\"actors\", JSON.stringify(this.actors));\n      window.localStorage.setItem(\"version\", \"v0.0.1a\");\n      //console.log(this.actors);\n    }\n  }\n\n  clear(color = \"#000\") {\n    //Game\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(\n      0,\n      0,\n      this.width * this.fontSize,\n      this.height * this.fontSize\n    );\n\n    //\"UI\"\n    this.ctx.fillRect(\n      0,\n      this.height * this.fontSize,\n      this.width * this.fontSize,\n      this.canvas.height - this.height * this.fontSize\n    );\n  }\n\n  drawChar(ch, x, y, color = \"#000\") {\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillStyle = \"#040414\";\n    this.ctx.fillRect(\n      x * this.fontSize - this.fontSize / 2,\n      y * this.fontSize,\n      this.fontSize,\n      this.fontSize\n    );\n\n    this.ctx.fillStyle = color;\n    this.ctx.fillText(ch, x * this.fontSize, y * this.fontSize + this.fontSize);\n  }\n\n  drawText(text, x, y, color = \"#AAA\") {\n    this.ctx.textAlign = \"left\";\n    /*\n    for (let i = 0; i < text.length; i++) {\n      this.drawChar(text.charAt(i), x + i, y, color);\n    }\n    */\n    this.ctx.fillStyle = \"#040414\";\n    this.ctx.fillStyle = color;\n    this.ctx.fillText(\n      text,\n      x * this.fontSize,\n      y * this.fontSize + this.fontSize\n    );\n  }\n\n  async run() {\n    (0,_utils__WEBPACK_IMPORTED_MODULE_10__.debugInit)();\n\n    while (true) {\n      await this.load();\n      await this.gameloop();\n      await this.save();\n      this.log.add(\"Press Esc to restart\", \"#FFF\");\n      this.render();\n      while (true) {\n        const ch = await this.getch();\n        if (ch === \"Escape\") break;\n      }\n    }\n  }\n\n  waitingKeypress() {\n    return new Promise((resolve) => {\n      document.addEventListener(\"keydown\", onKeyHandler);\n      function onKeyHandler(e) {\n        e.preventDefault();\n        if (e.keyCode !== 0) {\n          document.removeEventListener(\"keydown\", onKeyHandler);\n          game.lastKey = e.key;\n          resolve();\n        }\n      }\n    });\n  }\n\n  //wait keypress and return key\n  async getch() {\n    await this.waitingKeypress();\n    const tempKey = this.lastKey;\n    this.lastKey = 0;\n    return tempKey;\n  }\n\n  render() {\n    this.clear();\n\n    this.map.render();\n    this.drawChar(\"@\", this.playerX, this.playerY, \"#AAA\");\n\n    for (let i = 0; i < this.actors.length; i++) this.actors[i].render();\n\n    this.renderUI();\n  }\n\n  renderUI() {\n    for (let x = 0; x < this.width; x++) {\n      this.drawChar(\"-\", x, this.height, \"#888\");\n    }\n\n    const hp = this.player.destructible.hp;\n    const maxHP = this.player.destructible.maxHP;\n    const depth = this.map.depth;\n    this.drawText(\"HP: \" + hp + \"/\" + maxHP, 1, this.height + 1);\n    this.drawText(\"Depth: \" + depth, this.width - 6, this.height + 1);\n\n    this.log.render();\n  }\n\n  async gameloop() {\n    while (true) {\n      if (this.gameStatus === this.GameStatus.STARTUP) {\n        this.player.computeFov();\n        this.render();\n      }\n      this.gameStatus = this.GameStatus.IDLE;\n\n      await this.player.update();\n\n      if (this.gameStatus === this.GameStatus.NEW_TURN) {\n        for (const actor of this.actors) {\n          if (actor !== this.player) {\n            await actor.update();\n          }\n        }\n      }\n\n      //finally draw screen\n      this.render();\n\n      if (this.gameStatus === this.GameStatus.DEFEAT) {\n        this.drawText(\"DEFEAT!\", this.width / 2 - 3, this.height / 2, \"#A00\");\n        this.log.add(\"DEFEAT\", \"#A00\");\n        break;\n      }\n    }\n  }\n\n  removeActor(actor) {\n    for (let i = 0; i < this.actors.length; i++) {\n      if (this.actors[i] === actor) {\n        this.actors.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  sendToBack(actor) {\n    this.removeActor(actor);\n    this.actors.unshift(actor);\n  }\n\n  getClosestMonster(x, y, range) {\n    let closest = null;\n    let bestDistance = 100000;\n\n    for (const actor of this.actors) {\n      if (\n        actor != this.player &&\n        actor.destructible &&\n        !actor.destructible.isDead()\n      ) {\n        const distance = actor.getDistance(x, y);\n        if (distance < bestDistance && (distance <= range || range == 0.0)) {\n          bestDistance = distance;\n          closest = actor;\n        }\n      }\n    }\n    return closest;\n  }\n\n  getActor(x, y) {\n    for (const actor of this.actors) {\n      if (\n        actor.x === x &&\n        actor.y === y &&\n        actor.destructible &&\n        !actor.destructible.isDead()\n      ) {\n        return actor;\n      }\n    }\n    return null;\n  }\n\n  async pickATile(x, y, range = 0.0) {\n    let px = x;\n    let py = y;\n    let inRange = false;\n\n    while (true) {\n      this.render();\n      if (\n        this.player.fov.isInFov(px, py) &&\n        (range == 0 || this.player.getDistance(px, py) <= range)\n      ) {\n        this.drawChar(\"+\", px, py, \"#FFF\");\n        inRange = true;\n      } else {\n        this.drawChar(\"+\", px, py, \"#F88\");\n        inRange = false;\n      }\n\n      const ch = await this.getch();\n      if (ch === \"ArrowLeft\") px--;\n      if (ch === \"ArrowRight\") px++;\n      if (ch === \"ArrowUp\") py--;\n      if (ch === \"ArrowDown\") py++;\n      if (ch === \"Escape\") break;\n      if (ch === \"Enter\") {\n        if (inRange) {\n          return [true, px, py];\n        }\n      }\n    }\n\n    return [false, px, py];\n  }\n}\n\nconst game = new Game();\n\ngame.run();\n\n\n//# sourceURL=webpack://slanrl/./src/index.js?");

/***/ }),

/***/ "./src/log.js":
/*!********************!*\
  !*** ./src/log.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Log)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n\n\n\n\nclass LogText {\n  constructor(text, color) {\n    this.text = text;\n    this.color = color;\n  }\n}\n\nclass Log {\n  constructor() {\n    this.constants = Object.freeze({\n      SIZE_OF_LOG: 100,\n    });\n\n    this.texts = new Array();\n  }\n\n  render() {\n    let a = 0;\n    for (let i = this.texts.length - 16; i < this.texts.length; i++) {\n      if (i >= 0) {\n        ___WEBPACK_IMPORTED_MODULE_0__.game.drawText(\n          this.texts[i].text,\n          1,\n          ___WEBPACK_IMPORTED_MODULE_0__.game.height + 3 + a,\n          this.texts[i].color\n        );\n        a++;\n      }\n    }\n  }\n\n  add(text, color = \"#AAA\") {\n    //console.log(text);\n    this.texts.push(new LogText(text, color));\n    if (this.texts.length > this.constants.SIZE_OF_LOG) {\n      this.texts.splice(0, 1);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/log.js?");

/***/ }),

/***/ "./src/map.js":
/*!********************!*\
  !*** ./src/map.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"default\": () => (/* binding */ Map)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _actor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actor */ \"./src/actor.js\");\n/* harmony import */ var _ai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ai */ \"./src/ai.js\");\n/* harmony import */ var _attacker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attacker */ \"./src/attacker.js\");\n/* harmony import */ var _bsp_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bsp_generator */ \"./src/bsp_generator.js\");\n/* harmony import */ var _destructible__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./destructible */ \"./src/destructible.js\");\n/* harmony import */ var _pickable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pickable */ \"./src/pickable.js\");\n/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./random */ \"./src/random.js\");\n/* harmony import */ var _rectangle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rectangle */ \"./src/rectangle.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst random = new _random__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n\nclass Tile {\n  constructor() {\n    this.canWalk = false;\n    this.explored = false;\n  }\n}\n\nclass Map {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n\n    this.startX = 0;\n    this.startY = 0;\n\n    this.stairsX = 0;\n    this.stairsY = 0;\n\n\n    this.constants = Object.freeze({\n      ROOM_MAX_SIZE: 10,\n      ROOM_MIN_SIZE: 4,\n      MAX_ROOM_MONSTERS: 3,\n      MAX_ROOM_ITEMS: 2,\n    });\n\n    this.root = null;\n    this.levelSeed = 0;\n    this.depth = 0;\n  }\n\n  save() {\n    //console.log(\"map save, wip\");\n    window.localStorage.setItem(\"seed\", this.levelSeed);\n    window.localStorage.setItem(\"depth\", this.depth);\n  }\n\n  load() {\n    //console.log(\"map load, wip\");\n  }\n\n  isWall(x, y) {\n    const index = x + y * this.width;\n    return !this.tiles[index].canWalk;\n  }\n\n  setWall(x, y) {\n    this.tiles[x + y * this.width].canWalk = false;\n  }\n\n  canWalk(x, y) {\n    if (this.isWall(x, y)) return false;\n    for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\n      if (actor.x === x && actor.y === y && actor.blocks) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  addMonster(x, y) {\n    const rng = random.getInt(0, 100);\n\n    if (rng < 80) {\n      let orc = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, \"o\", \"lan orc\", \"#00AA00\");\n\n      orc.destructible = new _destructible__WEBPACK_IMPORTED_MODULE_5__.MonsterDestructible(10, 0, \"wasted lan orc\");\n      orc.attacker = new _attacker__WEBPACK_IMPORTED_MODULE_3__[\"default\"](3);\n      orc.ai = new _ai__WEBPACK_IMPORTED_MODULE_2__.MonsterAI();\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(orc);\n    } else {\n      let troll = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, \"t\", \"lan troll\", \"#008800\");\n\n      troll.destructible = new _destructible__WEBPACK_IMPORTED_MODULE_5__.MonsterDestructible(10, 0, \"wasted lan troll\");\n      troll.attacker = new _attacker__WEBPACK_IMPORTED_MODULE_3__[\"default\"](3);\n      troll.ai = new _ai__WEBPACK_IMPORTED_MODULE_2__.MonsterAI();\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(troll);\n    }\n  }\n\n  additem(x, y) {\n    const rng = random.getInt(0, 100);\n    if (rng < 70) {\n      if (random.getInt(0, 100) < 95) {\n        const healthPotion = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, \"!\", \"health potion\", \"#FF00FF\");\n        healthPotion.blocks = false;\n        healthPotion.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.Healer(4);\n        ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(healthPotion);\n        ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(healthPotion);\n      } else {\n        const healthPotion = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, \"@\", \"Nutella bun\", \"#A80\");\n        healthPotion.blocks = false;\n        healthPotion.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.Healer(30);\n        ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(healthPotion);\n        ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(healthPotion);\n        console.log(\"Jossain haisoo nutella!\");\n      }\n    } else if (rng < 70 + 10) {\n      const scrollOfLightingBolt = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n        x,\n        y,\n        \"#\",\n        \"scroll of lighting bolt\",\n        \"#0FF\"\n      );\n      scrollOfLightingBolt.blocks = false;\n      scrollOfLightingBolt.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.LightningBolt(5, 20);\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(scrollOfLightingBolt);\n      ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(scrollOfLightingBolt);\n    } else if (rng < 70 + 20) {\n      const scrollOfFireball = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n        x,\n        y,\n        \"#\",\n        \"scroll of Fireball\",\n        \"#FA0\"\n      );\n      scrollOfFireball.blocks = false;\n      scrollOfFireball.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.Fireball(2, 5);\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(scrollOfFireball);\n      ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(scrollOfFireball);\n    } else {\n      const scrollOfConfusion = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n        x,\n        y,\n        \"#\",\n        \"scroll of Confusion\",\n        \"#FFA\"\n      );\n      scrollOfConfusion.blocks = false;\n      scrollOfConfusion.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.Confuser(10, 8);\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(scrollOfConfusion);\n      ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(scrollOfConfusion);\n      //console.log(\"conf!\");\n    }\n  }\n\n  dig(x1, y1, x2, y2) {\n    x1 = x1 | 0;\n    x2 = x2 | 0;\n    y1 = y1 | 0;\n    y2 = y2 | 0;\n\n    if (x2 < x1) {\n      const tmp = x2;\n      x2 = x1;\n      x1 = tmp;\n    }\n\n    if (y2 < y1) {\n      const tmp = y2;\n      y2 = y1;\n      y1 = tmp;\n    }\n\n    for (let tilex = x1; tilex <= x2; tilex++) {\n      for (let tiley = y1; tiley <= y2; tiley++) {\n        const index = tilex + tiley * this.width;\n        this.tiles[index].canWalk = true;\n      }\n    }\n  }\n\n  addActors(room) {\n    let numberOfMonsters = random.getInt(0, this.constants.MAX_ROOM_MONSTERS);\n    let numberOfItems = random.getInt(0, this.constants.MAX_ROOM_ITEMS);\n    //console.log(room);\n    const x1 = room.x;\n    const x2 = room.x + room.w;\n    const y1 = room.y;\n    const y2 = room.y + room.h;\n\n    while (numberOfMonsters > 0) {\n      const x = random.getInt(x1, x2);\n      const y = random.getInt(y1, y2);\n      if (this.canWalk(x, y)) {\n        this.addMonster(x, y);\n      }\n      numberOfMonsters--;\n    }\n\n    while (numberOfItems > 0) {\n      const x = random.getInt(x1, x2);\n      const y = random.getInt(y1, y2);\n      if (this.canWalk(x, y)) {\n        this.additem(x, y);\n      }\n      numberOfItems--;\n    }\n  }\n\n  createRoom(x1, y1, x2, y2) {\n    this.dig(x1, y1, x2, y2);\n\n    /*\n    this.stairsX = ((x1 + x2) / 2) | 0;\n    this.stairsY = ((y1 + y2) / 2) | 0;\n    \n    \n    this.startX = this.stairsX;\n    this.startY = this.stairsY;\n    */\n  }\n\n  generate(withActors, seed, depth) {\n    this.levelSeed = parseInt(seed);\n    this.depth = parseInt(depth);\n\n    random.setSeed(this.levelSeed + (depth*25));\n    console.log(\"seed: \" + this.levelSeed);\n    console.log(\"depth: \" + this.depth);\n\n    this.root = new _bsp_generator__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 0, this.width, this.height, 5);\n    this.tiles = new Array(this.width * this.height).fill(false);\n\n    let monsterRooms = new Array();\n\n    //const option = random.getInt(0, 2);\n    //console.log(\"option: \" + option);\n    const option = 2;\n\n    for (let i = 0; i < this.width * this.height; i++) {\n      this.tiles[i] = new Tile();\n\n      //we can use path/room data directly from bsp if we want.\n      if (option === 0) this.tiles[i].canWalk = !this.root.map[i];\n    }\n\n    //lets create every room one by one\n    let lastx = 0;\n    let lasty = 0;\n    let x = 0;\n    let y = 0;\n    let w = 0;\n    let h = 0;\n\n    //take one room and make it spawn room\n    const spawnRoomIndex = random.getInt(0, this.root.rooms.length-1);\n    const stairsRoomIndex = random.getInt(0, this.root.rooms.length-1);\n\n    //console.log(\"spwanroom index: \" + spawnRoomIndex);\n    for (let i = 0; i < this.root.rooms.length; i++) {\n      const room = this.root.rooms[i];\n      const spawnRoom = i === spawnRoomIndex ? true : false;\n\n      if (i === spawnRoomIndex) {\n        //console.log(room);\n        this.startX = (room.x + (room.w/2)) | 0;\n        this.startY = (room.y + (room.h/2)) | 0;        \n      } \n      if (i === stairsRoomIndex)\n      {\n        this.stairsX = (room.x + (room.w/2)) | 0;\n        this.stairsY = (room.y + (room.h/2)) | 0;        \n      }\n\n      //option 1\n      if (option === 1) {\n        w = room.w;\n        h = room.h;\n        x = room.x + 1;\n        y = room.y + 1;\n\n        this.createRoom(x, y, x + w - 2, y + h - 2);\n        if (!spawnRoom) monsterRooms.push(new _rectangle__WEBPACK_IMPORTED_MODULE_8__[\"default\"](x, y, w - 2, h - 2));\n      }\n\n      //option 2\n      if (option === 2) {\n        w = random.getInt(this.constants.ROOM_MIN_SIZE, room.w - 2);\n        h = random.getInt(this.constants.ROOM_MIN_SIZE, room.h - 2);\n        x = random.getInt(room.x, room.x + room.w - w - 0) + 1;\n        y = random.getInt(room.y, room.y + room.h - h - 0) + 1;\n\n        this.createRoom(x, y, x + w - 2, y + h - 2);\n        if (!spawnRoom) monsterRooms.push(new _rectangle__WEBPACK_IMPORTED_MODULE_8__[\"default\"](x, y, w - 2, h - 2));\n      }\n\n      if (option === 1 || option === 2) {\n        if (i > 0) {\n          this.dig(lastx, lasty, x + w / 2, lasty);\n          this.dig(x + w / 2, lasty, x + w / 2, y + h / 2);\n        }\n        lastx = x + w / 2;\n        lasty = y + h / 2;\n      }\n    }\n    if (withActors) {\n      for (const room of monsterRooms) {\n        this.addActors(room);\n      }\n    }\n\n    \n\n  }\n\n  render() {\n    const darkWall = \"#\";\n    const darkGround = \".\";\n\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        const fovValue = ___WEBPACK_IMPORTED_MODULE_0__.game.player.fov.getMapped(x, y);\n        if (fovValue === 2 || fovValue === 1) {\n          if (fovValue === 2) {\n            ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\n              this.isWall(x, y) ? darkWall : darkGround,\n              x,\n              y,\n              \"#AAA\"\n            );\n          } else {\n            ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\n              this.isWall(x, y) ? darkWall : darkGround,\n              x,\n              y,\n              \"#444\"\n            );\n          }\n        } else {\n        }\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/map.js?");

/***/ }),

/***/ "./src/menu.js":
/*!*********************!*\
  !*** ./src/menu.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MenuItem\": () => (/* binding */ MenuItem),\n/* harmony export */   \"Menu\": () => (/* binding */ Menu)\n/* harmony export */ });\n\n\nclass MenuItem {\n  constructor() {\n    this.code = 0;\n    this.label = \"\";\n  }\n}\n\nclass Menu {\n  constructor() {\n    this.constants = Object.freeze({\n      NONE: 0,\n      NEW_GAME: 1,\n      CONTINUE: 2,\n      EXIT: 3,\n    });\n\n    this.items = new Array();\n  }\n\n  clear() {\n    if (this.items && this.items.length > 0) this.items = null;\n  }\n\n  addItem(code, label) {\n    let item = new MenuItem();\n    item.code = code;\n    item.label = label;\n    this.items.push(item);\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/menu.js?");

/***/ }),

/***/ "./src/pickable.js":
/*!*************************!*\
  !*** ./src/pickable.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Pickable),\n/* harmony export */   \"Healer\": () => (/* binding */ Healer),\n/* harmony export */   \"LightningBolt\": () => (/* binding */ LightningBolt),\n/* harmony export */   \"Fireball\": () => (/* binding */ Fireball),\n/* harmony export */   \"Confuser\": () => (/* binding */ Confuser)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _ai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ai */ \"./src/ai.js\");\n\n\n\n\n\nclass Pickable {\n  constructor(type = \"unknow\") {\n    this.type = type;\n  }\n\n  pick(owner, wearer) {\n    if (wearer.container && wearer.container.add(owner)) {\n      ___WEBPACK_IMPORTED_MODULE_0__.game.removeActor(owner);\n      return true;\n    }\n    return false;\n  }\n\n  use(owner, wearer) {\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"You use a \" + owner.name);\n    if (wearer.container) {\n      wearer.container.remove(owner);\n      return true;\n    }\n    return false;\n  }\n\n  drop(owner, wearer) {\n    if (wearer.container) {\n      wearer.container.remove(owner);\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(owner);\n      ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(owner);\n      owner.x = wearer.x;\n      owner.y = wearer.y;\n      ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(wearer.name + \" drops a \" + owner.name);\n    }\n  }\n}\n\nclass Healer extends Pickable {\n  constructor(amount) {\n    super(\"healer\");\n    this.amount = amount;\n  }\n\n  use(owner, wearer) {\n    if (wearer.destructible) {\n      const amountHealed = wearer.destructible.heal(this.amount);\n      if (amountHealed > 0) {\n        return super.use(owner, wearer);\n      }\n    }\n    return false;\n  }\n}\n\nclass LightningBolt extends Pickable {\n  constructor(range, damage) {\n    super(\"lightingBolt\");\n    this.range = range;\n    this.damage = damage;\n  }\n\n  use(owner, wearer) {\n    const closestMonster = ___WEBPACK_IMPORTED_MODULE_0__.game.getClosestMonster(\n      wearer.x,\n      wearer.y,\n      this.range\n    );\n    if (!closestMonster) {\n      ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"No enemy is close enough to strike.\");\n      return false;\n    }\n\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\n      \"A lighting bolt strikes the \" +\n        closestMonster.name +\n        \" with a loud thunder!\",\n      \"#0FF\"\n    );\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"The damage is \" + this.damage + \" hit points.\", \"#0FF\");\n\n    closestMonster.destructible.takeDamage(closestMonster, this.damage);\n    return super.use(owner, wearer);\n  }\n}\n\nclass Fireball extends Pickable {\n  constructor(range, damage) {\n    super(\"fireBall\");\n    this.range = range;\n    this.damage = damage;\n  }\n\n  async use(owner, wearer) {\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\n      \"Use arrow keys to target tile for fireball. Enter to select target. Esc to cancel.\"\n    );\n    const tilePick = await ___WEBPACK_IMPORTED_MODULE_0__.game.pickATile(wearer.x, wearer.y);\n\n    if (tilePick[0] == true) {\n      ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\n        \"The fireball explodes, burning everything within \" +\n          this.range +\n          \" tiles!\",\n        \"#FA0\"\n      );\n\n      //for (let i = 0; i < game.actors.length; i++) {\n      for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\n        if (\n          actor.destructible &&\n          !actor.destructible.isDead() &&\n          actor.getDistance(tilePick[1], tilePick[2]) < this.range\n        ) {\n          ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\n            \"The \" +\n              actor.name +\n              \" gets burned for \" +\n              this.damage +\n              \" hit points.\",\n            \"#FA0\"\n          );\n          actor.destructible.takeDamage(actor, this.damage);\n        }\n      }\n\n      return super.use(owner, wearer);\n    }\n\n    return false;\n  }\n}\n\nclass Confuser extends Pickable {\n  constructor(nbTurns, range) {\n    super(\"confuser\");\n    this.nbTurns = nbTurns;\n    this.range = range;\n  }\n\n  async use(owner, wearer) {\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\n      \"Arrow keys to select a creature. Enter to select target. Esc to cancel.\"\n    );\n    const tilePick = await ___WEBPACK_IMPORTED_MODULE_0__.game.pickATile(wearer.x, wearer.y);\n    console.log(tilePick);\n\n    if (tilePick == null || tilePick[0] === false) {\n      return false;\n    }\n\n    const actor = ___WEBPACK_IMPORTED_MODULE_0__.game.getActor(tilePick[1], tilePick[2]);\n    if (!actor) {\n      return false;\n    }\n\n    const ai = new _ai__WEBPACK_IMPORTED_MODULE_1__.ConfusedAI(this.nbTurns, actor.ai);\n    actor.ai = ai;\n\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"The eyes of the \" + actor.name + \" look vacant\", \"#AFD\");\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"as he starts to stumble around!\", \"#AFD\");\n\n    return super.use(owner, wearer);\n  }\n}\n\n\n//# sourceURL=webpack://slanrl/./src/pickable.js?");

/***/ }),

/***/ "./src/random.js":
/*!***********************!*\
  !*** ./src/random.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\nlet _seed = 0;\n\nclass Randomizer {\n  constructor() {\n    this.rnd = 0;\n  }\n\n  setSeed(seed) {\n    _seed = seed;\n  }\n\n  calc() {\n    _seed = (_seed * 9301 + 49297) % 233280;\n    this.rnd = _seed / 233280.0;\n  }\n\n  getInt(min, max) {\n    max = max || 1;\n    min = min || 0;\n    this.calc();\n    return Math.floor(min + this.rnd * (max - min));\n  }\n\n  dice(dices, eyes, bonus = 0) {\n    let v = 0;\n    eyes++;\n    for (let i = 0; i < dices; i++) {\n      v += Number(this.getInt(1, eyes));\n    }\n    v += +bonus;\n    if (v < dices) v = dices;\n    return v;\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Randomizer);\n\n\n//# sourceURL=webpack://slanrl/./src/random.js?");

/***/ }),

/***/ "./src/rectangle.js":
/*!**************************!*\
  !*** ./src/rectangle.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\nclass Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n\n  GetHalfDimensionX() {\n    return this.w / 2;\n  }\n  GetHalfDimensionY() {\n    return this.h / 2;\n  }\n\n  GetCenterX() {\n    return this.x + this.GetHalfDimensionX();\n  }\n\n  GetCenterY() {\n    return this.y + this.GetHalfDimensionY();\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Rectangle);\n\n\n//# sourceURL=webpack://slanrl/./src/rectangle.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"paddedLogObject\": () => (/* binding */ paddedLogObject),\n/* harmony export */   \"populateVersion\": () => (/* binding */ populateVersion),\n/* harmony export */   \"printVersionContainer\": () => (/* binding */ printVersionContainer),\n/* harmony export */   \"debugInit\": () => (/* binding */ debugInit)\n/* harmony export */ });\nconst paddedLogObject = (object) => {\n  const maxKeyLength = Object.keys(object).reduce(\n    (previousValue, currentValue) =>\n      currentValue.length + 3 > previousValue\n        ? currentValue.length + 3\n        : previousValue,\n    0\n  );\n\n  console.log(\n    Object.keys(object)\n      .map((key) => `${key.padEnd(maxKeyLength, \" \")}: ${object[key]}`)\n      .join(\"\\n\")\n  );\n};\n\nconst populateVersion = () =>\n  `Commit ID: <span>${\"1ed0cc2\"}</span> | Version: <span>${\"v0.0.1a\"}</span>`;\n\nconst printVersionContainer = () => {\n  document.querySelector(\"#version\").innerHTML = populateVersion();\n};\n\nconst debugInit = () => {\n  // Populates the content for \"version\" div in the bottom right corner\n  printVersionContainer();\n\n  // Console logs a padded object\n  paddedLogObject({\n    BUILD_DATE: \"2021-10-19\",\n    BUILD_TIME: \"17:52:24\",\n    BUILD_DATETIME: \"2021-10-19T17:52:24.656Z\",\n    COMMIT_HASH: \"1ed0cc2\",\n    VERSION: \"v0.0.1a\",\n  });\n};\n\n\n//# sourceURL=webpack://slanrl/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;