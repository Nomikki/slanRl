/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/actor.js":
/*!**********************!*\
  !*** ./src/actor.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Actor)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _pickable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pickable */ \"./src/pickable.js\");\n\r\n\r\n\r\n\r\n\r\nclass Actor {\r\n  constructor(x, y, ch, name, color) {\r\n    this.x = x | 0;\r\n    this.y = y | 0;\r\n    this.ch = ch;\r\n    this.color = color;\r\n    this.name = name;\r\n\r\n    this.fov = null;\r\n    this.fovOnly = true;\r\n    this.blocks = true; //can we walk on this actor?\r\n\r\n    // Destructible: Something that can take damage and potentially break or die\r\n    this.destructible = null;\r\n\r\n    // Attacker: Something that can deal damage to a Destructible\r\n    this.attacker = null;\r\n\r\n    // Ai: Something that is self-updating\r\n    this.ai = null;\r\n\r\n    // Pickable: Something that can be picked and used\r\n    this.pickable = null;\r\n\r\n    // Container: Something that can contain actors\r\n    this.container = null;\r\n  }\r\n\r\n  save() {\r\n    console.log(\"actor save, wip\");\r\n  }\r\n\r\n  load() {\r\n    console.log(\"actor load, wip\");\r\n  }\r\n\r\n  create(actorTemplate) {\r\n    \r\n    //console.log(actorTemplate);\r\n    if (actorTemplate.pickable.type === \"lightingBolt\")\r\n      this.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_1__.LightningBolt(\r\n        actorTemplate.pickable.range,\r\n        actorTemplate.pickable.damage\r\n      );\r\n\r\n    if (actorTemplate.pickable.type === \"fireBall\")\r\n      this.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_1__.Fireball(\r\n        actorTemplate.pickable.range,\r\n        actorTemplate.pickable.damage\r\n      );\r\n\r\n    if (actorTemplate.pickable.type === \"healer\")\r\n      this.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_1__.Healer(actorTemplate.pickable.amount);\r\n\r\n    if (actorTemplate.pickable.type === \"confuser\")\r\n      this.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_1__.Confuser(\r\n        actorTemplate.pickable.nbTurns,\r\n        actorTemplate.pickable.range\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const fovValue = ___WEBPACK_IMPORTED_MODULE_0__.game.player.fov.getMapped(this.x, this.y);\r\n    if (fovValue === 2 || (fovValue != 0 && !this.fovOnly)) {\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(this.ch, this.x, this.y, this.color);\r\n    }\r\n  }\r\n\r\n  async update() {\r\n    if (this.ai) {\r\n      await this.ai.update(this);\r\n    }\r\n  }\r\n\r\n  computeFov() {\r\n    if (this.fov) {\r\n      this.fov.compute(this.x, this.y, 10);\r\n    }\r\n  }\r\n\r\n  getDistance(x, y) {\r\n    const dx = this.x - x;\r\n    const dy = this.y - y;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://slanrl/./src/actor.js?");

/***/ }),

/***/ "./src/ai.js":
/*!*******************!*\
  !*** ./src/ai.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"default\": () => (/* binding */ AI),\n/* harmony export */   \"PlayerAI\": () => (/* binding */ PlayerAI),\n/* harmony export */   \"MonsterAI\": () => (/* binding */ MonsterAI),\n/* harmony export */   \"ConfusedAI\": () => (/* binding */ ConfusedAI)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random */ \"./src/random.js\");\n\r\n\r\n\r\n\r\nconst random = new _random__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n\r\nclass AI {\r\n  constructor() {}\r\n  \r\n  update(owner) {}\r\n}\r\n\r\nclass PlayerAI extends AI {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  async update(owner) {\r\n    if (owner.destructible && owner.destructible.isDead()) return;\r\n\r\n    let dx = 0;\r\n    let dy = 0;\r\n    const ch = await ___WEBPACK_IMPORTED_MODULE_0__.game.getch();\r\n\r\n    switch (ch) {\r\n      case \"ArrowLeft\":\r\n        dx--;\r\n        break;\r\n      case \"ArrowRight\":\r\n        dx++;\r\n        break;\r\n      case \"ArrowUp\":\r\n        dy--;\r\n        break;\r\n      case \"ArrowDown\":\r\n        dy++;\r\n        break;\r\n      default:\r\n        await this.handleActionKey(owner, ch);\r\n        break;\r\n    }\r\n\r\n    if (dx !== 0 || dy !== 0) {\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.NEW_TURN;\r\n\r\n      if (this.moveOrAttack(owner, owner.x + dx, owner.y + dy)) {\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.player.computeFov();\r\n      }\r\n    }\r\n  }\r\n\r\n  async handleActionKey(owner, ascii) {\r\n    console.log(ascii);\r\n\r\n    switch (ascii) {\r\n      case \"S\": //save\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.save();\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Game saved...\",  \"#0FA\");\r\n        break;\r\n      case \"g\": //pickup item\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.NEW_TURN;\r\n        let found = false;\r\n        for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\r\n          if (actor.pickable && actor.x === owner.x && actor.y === owner.y) {\r\n            if (actor.pickable.pick(actor, owner)) {\r\n              found = true;\r\n              ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"You pick up the \" + actor.name, \"#AAA\");\r\n              break;\r\n            } else if (!found) {\r\n              found = true;\r\n              ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Your inventory is full.\", \"#F00\");\r\n            }\r\n          }\r\n        }\r\n        if (!found) {\r\n          ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"There's nothing here that you can pick up.\");\r\n        }\r\n        break;\r\n      case \"i\": //use item\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Use item\");\r\n        const useItem = await this.choseFromInventory(owner);\r\n        if (useItem) {\r\n          await useItem.pickable.use(useItem, owner);\r\n          ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.NEW_TURN;\r\n        } else {\r\n          ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Nevermind...\");\r\n        }\r\n        break;\r\n        case \"d\": //drop item\r\n          const dropItem = await this.choseFromInventory(owner);\r\n          if (dropItem) {\r\n            await dropItem.pickable.drop(dropItem, owner);\r\n            ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.NEW_TURN;\r\n          } else {\r\n            ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"Nevermind...\");\r\n          }\r\n          break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  moveOrAttack(owner, targetX, targetY) {\r\n    if (___WEBPACK_IMPORTED_MODULE_0__.game.map.isWall(targetX, targetY)) return false;\r\n\r\n    for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\r\n      if (\r\n        actor.destructible &&\r\n        !actor.destructible.isDead() &&\r\n        actor.x === targetX &&\r\n        actor.y === targetY\r\n      ) {\r\n        owner.attacker.attack(owner, actor);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    //look for corpses or items\r\n    for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\r\n      const corpseOrItem =\r\n        (actor.destructible && actor.destructible.isDead) || actor.pickable;\r\n\r\n      if (corpseOrItem && actor.x === targetX && actor.y === targetY) {\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"There is a \" + actor.name + \" here\");\r\n      }\r\n    }\r\n\r\n    owner.x = targetX;\r\n    owner.y = targetY;\r\n    return true;\r\n  }\r\n\r\n  async choseFromInventory(owner) {\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.clear();\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.render();\r\n    for (let y = 0; y < 28; y++) {\r\n      for (let x = 0; x < 40; x++) {\r\n        if ((y === 0 || y === 27) && x > 0 && x < 39)\r\n          ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\"-\", x + 20, y, \"#AAA\");\r\n        else if ((x === 0 || x === 39) && y > 0 && y < 27)\r\n          ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\"|\", x + 20, y, \"#AAA\");\r\n        else if (y === 0 || x === 0 || y === 27 || x === 39)\r\n          ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\"+\", x + 20, y, \"#AAA\");\r\n        else ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\" \", x + 20, y);\r\n      }\r\n    }\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.drawText(\" INVENTORY \", 34, 0);\r\n    //game.renderUI();\r\n\r\n    let shortcut = \"a\";\r\n    let i = 0;\r\n    for (const it of owner.container.inventory) {\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.drawText(shortcut + \") \" + it.name, 22, 2 + i);\r\n      shortcut = String.fromCharCode(shortcut.charCodeAt(0) + 1);\r\n      i++;\r\n    }\r\n\r\n    let ch = await ___WEBPACK_IMPORTED_MODULE_0__.game.getch();\r\n    const actorIndex = ch.charCodeAt(0) - 97; //97 = a\r\n    if (actorIndex >= 0 && actorIndex < owner.container.inventory.length) {\r\n      return owner.container.inventory[actorIndex];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nclass MonsterAI extends AI {\r\n  constructor() {\r\n    super();\r\n    this.moveCount = 0;\r\n\r\n    this.Constants = Object.freeze({\r\n      TRACKING_TURNS: 3,\r\n    });\r\n  }\r\n\r\n  async update(owner) {\r\n    if (owner.destructible && owner.destructible.isDead()) return;\r\n\r\n    if (___WEBPACK_IMPORTED_MODULE_0__.game.player.fov.isInFov(owner.x, owner.y)) {\r\n      this.moveCount = this.Constants.TRACKING_TURNS;\r\n    } else {\r\n      this.moveCount--;\r\n    }\r\n\r\n    if (this.moveCount > 0) {\r\n      this.moveOrAttack(owner, ___WEBPACK_IMPORTED_MODULE_0__.game.player.x, ___WEBPACK_IMPORTED_MODULE_0__.game.player.y);\r\n    }\r\n  }\r\n\r\n  moveOrAttack(owner, targetX, targetY) {\r\n    let dx = targetX - owner.x;\r\n    let dy = targetY - owner.y;\r\n    const stepdx = dx > 0 ? 1 : -1;\r\n    const stepdy = dy > 0 ? 1 : -1;\r\n\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (distance >= 2) {\r\n      dx = Math.round(dx / distance);\r\n      dy = Math.round(dy / distance);\r\n\r\n      if (___WEBPACK_IMPORTED_MODULE_0__.game.map.canWalk(owner.x + dx, owner.y + dy)) {\r\n        owner.x += dx | 0;\r\n        owner.y += dy | 0;\r\n      } else if (___WEBPACK_IMPORTED_MODULE_0__.game.map.canWalk(owner.x + stepdx, owner.y)) {\r\n        owner.x += stepdx | 0;\r\n      } else if (___WEBPACK_IMPORTED_MODULE_0__.game.map.canWalk(owner.x, owner.y + stepdy)) {\r\n        owner.y += stepdy | 0;\r\n      }\r\n    } else {\r\n      owner.attacker.attack(owner, ___WEBPACK_IMPORTED_MODULE_0__.game.player);\r\n    }\r\n  }\r\n}\r\n\r\nclass ConfusedAI extends AI {\r\n  constructor(nbTurns, oldAi) {\r\n    super();\r\n    this.nbTurns = nbTurns;\r\n    this.oldAi = oldAi;\r\n  }\r\n\r\n  async update(owner) {\r\n    const dx = random.getInt(-1, 1);\r\n    const dy = random.getInt(-1, 1);\r\n\r\n    if (dx !== 0 || dy !== 0) {\r\n      const destx = owner.x + dx;\r\n      const desty = owner.y + dy;\r\n\r\n      if (___WEBPACK_IMPORTED_MODULE_0__.game.map.canWalk(destx, desty)) {\r\n        owner.x = destx;\r\n        owner.y = desty;\r\n      } else {\r\n        const actor = ___WEBPACK_IMPORTED_MODULE_0__.game.getActor(destx, desty);\r\n        if (actor) {\r\n          owner.attacker.attack(owner, actor);\r\n        }\r\n      }\r\n    }\r\n    this.nbTurns--;\r\n    if (this.nbTurns <= 0) {\r\n      owner.ai = this.oldAi;\r\n\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://slanrl/./src/ai.js?");

/***/ }),

/***/ "./src/attacker.js":
/*!*************************!*\
  !*** ./src/attacker.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Attacker)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n\r\n\r\n\r\n\r\nclass Attacker {\r\n  constructor(power) {\r\n    this.power = power;\r\n  }\r\n\r\n  attack(owner, target) {\r\n    if (target.destructible && !target.destructible.isDead()) {\r\n      if (this.power - target.destructible.defense > 0) {\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\r\n          owner.name +\r\n            \" attacks \" +\r\n            target.name +\r\n            \" for \" +\r\n            (this.power - target.destructible.defense) +\r\n            \" hit points.\", owner === ___WEBPACK_IMPORTED_MODULE_0__.game.player ? \"#DDD\" : \"#AAA\"\r\n        );\r\n      } else {\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\r\n          owner.name + \" attacks \" + target.name + \" but it has no effect!\"\r\n        );\r\n      }\r\n      target.destructible.takeDamage(target, this.power);\r\n    } else {\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(owner.name + \" attacks \" + target.name + \" in vain.\");\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://slanrl/./src/attacker.js?");

/***/ }),

/***/ "./src/bsp_generator.js":
/*!******************************!*\
  !*** ./src/bsp_generator.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rectangle.js */ \"./src/rectangle.js\");\n/* harmony import */ var _bsp_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bsp_node.js */ \"./src/bsp_node.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./random.js */ \"./src/random.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst random = new _random_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n\r\nclass bspGenerator {\r\n  constructor(x, y, w, h, maxLevel = 5) {\r\n    this.maxLevel = maxLevel;\r\n\r\n    this.rootContainer = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x + 1, y + 1, w - 2, h - 2);\r\n\r\n    this.rows = h;\r\n    this.cols = w;\r\n\r\n    this.map = [];\r\n    this.doorPlaces = [];\r\n    this.tempRooms = [];\r\n\r\n    for (let h = 0; h < this.rows; h++) {\r\n      for (let w = 0; w < this.cols; w++) {\r\n        const index = this.cols * h + w;\r\n        this.map[index] = 1;\r\n      }\r\n    }\r\n\r\n    this.tree = this.Devide(this.rootContainer, 0);\r\n    this.rooms = this.tree.GetLeafs();\r\n    this.CreateRooms();\r\n    this.ConnectRooms(this.tree);\r\n  }\r\n\r\n  RandomSplit(container) {\r\n    let r1, r2;\r\n\r\n    let splitVertical = random.getInt(0, 1);\r\n\r\n    if (container.w > container.h && container.w / container.h >= 0.05) {\r\n      splitVertical = true;\r\n    } else {\r\n      splitVertical = false;\r\n    }\r\n\r\n    if (splitVertical) {\r\n      //Vertical\r\n      const w = random.getInt(container.w * 0.3, container.w * 0.6);\r\n      r1 = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](container.x, container.y, w, container.h);\r\n      r2 = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\r\n        container.x + w,\r\n        container.y,\r\n        container.w - w,\r\n        container.h\r\n      );\r\n    } else {\r\n      //horizontal\r\n      const h = random.getInt(container.h * 0.3, container.h * 0.6);\r\n      r1 = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](container.x, container.y, container.w, h);\r\n      r2 = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\r\n        container.x,\r\n        container.y + h,\r\n        container.w,\r\n        container.h - h\r\n      );\r\n    }\r\n    return [r1, r2];\r\n  }\r\n\r\n  Devide(container, level) {\r\n    const root = new _bsp_node_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](container);\r\n\r\n    if (level < this.maxLevel) {\r\n      const sr = this.RandomSplit(container);\r\n      root.A = this.Devide(sr[0], level + 1);\r\n      root.B = this.Devide(sr[1], level + 1);\r\n    }\r\n    return root;\r\n  }\r\n\r\n  CreateRooms() {\r\n    //for (let i = 0; i < this.rooms.length; i++) {\r\n    for (const room of this.rooms) {\r\n      const w = random.getInt(room.w * 0.5, room.w * 0.9);\r\n      const h = random.getInt(room.h * 0.5, room.h * 0.9);\r\n      const x = random.getInt(room.x, room.x + room.w - w);\r\n      const y = random.getInt(room.y, room.y + room.h - h);\r\n\r\n      let rect = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x, y, x + w, y + h);\r\n      this.tempRooms.push(rect);\r\n\r\n      for (let hi = y; hi < y + h; hi++) {\r\n        for (let wi = x; wi < x + w; wi++) {\r\n          const index = this.cols * hi + wi;\r\n          this.map[index] = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  IsThereRoom(x, y) {\r\n    for (const room of this.tempRooms) {\r\n      if (x >= room.x && y >= room.y && x <= room.w && y <= room.h) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  ConnectRooms(node) {\r\n    if (node.A === null || node.B === null) return false;\r\n\r\n    const x1 = node.A.leaf.GetCenterX() >> 0;\r\n    const y1 = node.A.leaf.GetCenterY() >> 0;\r\n\r\n    const x2 = node.B.leaf.GetCenterX() >> 0;\r\n    const y2 = node.B.leaf.GetCenterY() >> 0;\r\n\r\n    let doorsCreated = false;\r\n    let lastWasInRoom = false;\r\n\r\n    for (let x = Math.min(x1, x2); x <= Math.max(x1, x2); x++) {\r\n      const index = this.cols * Math.max(y1, y2) + x;\r\n      this.map[index] = 0;\r\n\r\n      if (!doorsCreated && this.IsThereRoom(x, Math.max(y1, y2)) === true) {\r\n        lastWasInRoom = true;\r\n      } else if (\r\n        !doorsCreated &&\r\n        this.IsThereRoom(x, Math.max(y1, y2)) === false\r\n      ) {\r\n        if (lastWasInRoom === true) {\r\n          doorsCreated = true;\r\n          let re = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x, Math.max(y1, y2), 0, 0);\r\n          this.doorPlaces.push(re);\r\n        }\r\n      }\r\n    }\r\n    doorsCreated = false;\r\n\r\n    for (let y = Math.min(y1, y2); y <= Math.max(y1, y2); y++) {\r\n      const index = this.cols * y + Math.max(x1, x2);\r\n      this.map[index] = 0;\r\n      if (!doorsCreated && this.IsThereRoom(Math.max(x1, x2), y) === true) {\r\n        lastWasInRoom = true;\r\n      } else if (\r\n        !doorsCreated &&\r\n        this.IsThereRoom(Math.max(x1, x2), y) === false\r\n      ) {\r\n        if (lastWasInRoom === true) {\r\n          doorsCreated = true;\r\n          let re = new _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.max(x1, x2), y, 0, 0);\r\n          this.doorPlaces.push(re);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.ConnectRooms(node.A);\r\n    this.ConnectRooms(node.B);\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bspGenerator);\r\n\n\n//# sourceURL=webpack://slanrl/./src/bsp_generator.js?");

/***/ }),

/***/ "./src/bsp_node.js":
/*!*************************!*\
  !*** ./src/bsp_node.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rectangle.js */ \"./src/rectangle.js\");\n\r\n\r\n\r\n\r\nclass bspNode extends _rectangle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  constructor(leaf) {\r\n    super(leaf);\r\n    this.A = null;\r\n    this.B = null;\r\n    this.leaf = leaf;\r\n  }\r\n\r\n  GetLeafs() {\r\n    if (this.A === null && this.B === null) {\r\n      return [this.leaf];\r\n    } else {\r\n      return [].concat(this.A.GetLeafs(), this.B.GetLeafs());\r\n    }\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bspNode);\r\n\n\n//# sourceURL=webpack://slanrl/./src/bsp_node.js?");

/***/ }),

/***/ "./src/container.js":
/*!**************************!*\
  !*** ./src/container.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Container)\n/* harmony export */ });\n\r\n\r\nclass Container {\r\n  constructor(size) {\r\n    this.size = size; //maximum number of actors\r\n    this.inventory = new Array();\r\n  }\r\n\r\n  add(actor) {\r\n    if (this.size > 0 && this.inventory.length >= this.size) {\r\n      //inventory is full\r\n      return false;\r\n    } else {\r\n      this.inventory.push(actor);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  remove(actor) {\r\n    for (let i = 0; i < this.inventory.length; i++) {\r\n      if (this.inventory[i] === actor) {\r\n        this.inventory.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://slanrl/./src/container.js?");

/***/ }),

/***/ "./src/destructible.js":
/*!*****************************!*\
  !*** ./src/destructible.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Destructible),\n/* harmony export */   \"MonsterDestructible\": () => (/* binding */ MonsterDestructible),\n/* harmony export */   \"PlayerDestructible\": () => (/* binding */ PlayerDestructible)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n\r\n\r\n\r\n\r\nclass Destructible {\r\n  constructor(maxHP, defense, corpseName, type) {\r\n    this.maxHP = maxHP;\r\n    this.hp = this.maxHP;\r\n    this.defense = defense;\r\n    this.corpseName = corpseName;\r\n    this.type = type;\r\n  }\r\n\r\n  isDead() {\r\n    return this.hp <= 0;\r\n  }\r\n\r\n  heal(amount) {\r\n    this.hp += amount;\r\n    if (this.hp > this.maxHP) {\r\n      amount -= this.hp - this.maxHP;\r\n      this.hp = this.maxHP;\r\n    }\r\n    return amount;\r\n  }\r\n\r\n  takeDamage(owner, damage) {\r\n    damage -= this.defense;\r\n\r\n    if (damage > 0) {\r\n      this.hp -= damage;\r\n      if (this.hp <= 0) {\r\n        this.die(owner);\r\n      }\r\n    } else {\r\n      damage = 0;\r\n    }\r\n    return damage;\r\n  }\r\n\r\n  die(owner) {\r\n    owner.ch = \"%\";\r\n    owner.color = \"#AA0000\";\r\n    owner.name = this.corpseName;\r\n    owner.blocks = false;\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(owner);\r\n  }\r\n}\r\n\r\nclass MonsterDestructible extends Destructible {\r\n  constructor(maxHP, defense, corpseName) {\r\n    super(maxHP, defense, corpseName, \"monster\");\r\n  }\r\n\r\n  die(owner) {\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(owner.name + \" is dead\");\r\n    super.die(owner);\r\n  }\r\n}\r\n\r\nclass PlayerDestructible extends Destructible {\r\n  constructor(maxHP, defense, corpseName) {\r\n    super(maxHP, defense, corpseName, \"player\");\r\n  }\r\n\r\n  die(owner) {\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"You died\", \"#A00\");\r\n    super.die(owner);\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.gameStatus = ___WEBPACK_IMPORTED_MODULE_0__.game.GameStatus.DEFEAT;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://slanrl/./src/destructible.js?");

/***/ }),

/***/ "./src/fov.js":
/*!********************!*\
  !*** ./src/fov.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fov)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n\r\n\r\n\r\n\r\nclass Fov {\r\n  constructor(w, h) {\r\n    this.width = w;\r\n    this.height = h;\r\n\r\n    this.mapped = new Array(this.width * this.height).fill(0);\r\n  }\r\n\r\n  clear() {\r\n    for (let i = 0; i < this.width * this.height; i++) {\r\n      if (this.mapped[i] === 2) {\r\n        this.mapped[i] = 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  fullClear() {\r\n    this.mapped = new Array(this.width * this.height).fill(0);\r\n  }\r\n\r\n  float2int(value) {\r\n    return value | 0;\r\n  }\r\n\r\n  /* Just a placeholder */\r\n  compute(x, y, len) {\r\n    this.clear();\r\n\r\n    let dx = 0;\r\n    let dy = 0;\r\n    let px = 0;\r\n    let py = 0;\r\n\r\n    this.mapped[x + y * this.width] = 2;\r\n\r\n    for (let a = 0; a < 360; a++) {\r\n      dx = Math.sin((a / 3.1415) * 180.0);\r\n      dy = Math.cos((a / 3.1415) * 180.0);\r\n\r\n      px = x + 0.5;\r\n      py = y + 0.5;\r\n\r\n      for (let l = 0; l < len; l++) {\r\n        px += dx;\r\n        py += dy;\r\n\r\n        if (px <= 0 || px >= this.width || py <= 0 || py >= this.height) {\r\n          break;\r\n        }\r\n\r\n        const id = this.float2int(px) + this.float2int(py) * this.width;\r\n        this.mapped[id] = 2;\r\n\r\n        if (___WEBPACK_IMPORTED_MODULE_0__.game.map.isWall(this.float2int(px), this.float2int(py)) === true) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getMapped(x, y) {\r\n    if (x >= 0 && y >= 0 && x < this.width && y < this.height)\r\n      return this.mapped[x + y * this.width];\r\n    else return 2;\r\n  }\r\n\r\n  isInFov(x, y) {\r\n    if (x >= 0 && y >= 0 && x < this.width && y < this.height) {\r\n      return this.mapped[x + y * this.width] > 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://slanrl/./src/fov.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"game\": () => (/* binding */ game)\n/* harmony export */ });\n/* harmony import */ var _actor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actor */ \"./src/actor.js\");\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ \"./src/map.js\");\n/* harmony import */ var _fov__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fov */ \"./src/fov.js\");\n/* harmony import */ var _destructible__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./destructible */ \"./src/destructible.js\");\n/* harmony import */ var _attacker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./attacker */ \"./src/attacker.js\");\n/* harmony import */ var _ai__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ai */ \"./src/ai.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./log */ \"./src/log.js\");\n/* harmony import */ var _container__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./container */ \"./src/container.js\");\n/* harmony import */ var _persistent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./persistent */ \"./src/persistent.js\");\n/* harmony import */ var _pickable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pickable */ \"./src/pickable.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Game {\r\n  constructor() {\r\n    this.GameStatus = Object.freeze({\r\n      STARTUP: 0,\r\n      IDLE: 1,\r\n      NEW_TURN: 2,\r\n      VICTORY: 3,\r\n      DEFEAT: 4,\r\n    });\r\n\r\n    this.gameStatus = this.GameStatus.STARTUP;\r\n    this.player = null;\r\n    this.map = null;\r\n\r\n    this.canvas = document.getElementById(\"screen\");\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    this.ctx.font = \"12px Arial\";\r\n    this.fontSize = 12;\r\n    this.ctx.textAlign = \"center\";\r\n\r\n    this.log = new _log__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\r\n\r\n    this.lastKey = 0;\r\n\r\n    this.width = 80;\r\n    this.height = 40;\r\n    this.masterSeed = 1;\r\n\r\n    this.actors = new Array();\r\n    this.map = new _map__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.width, this.height);\r\n\r\n    this.persistent = new _persistent__WEBPACK_IMPORTED_MODULE_8__.Persistent();\r\n  }\r\n\r\n  async init(withActors) {\r\n    this.map.generate(withActors, this.masterSeed, 1);\r\n\r\n    if (withActors) {\r\n      const i = this.actors.push(new _actor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2, 2, \"@\", \"hero\", \"#CCC\")) - 1;\r\n      this.player = this.actors[i];\r\n      this.player.destructible = new _destructible__WEBPACK_IMPORTED_MODULE_3__.PlayerDestructible(30, 2, \"your cadaver\");\r\n      this.player.attacker = new _attacker__WEBPACK_IMPORTED_MODULE_4__[\"default\"](5);\r\n      this.player.ai = new _ai__WEBPACK_IMPORTED_MODULE_5__.PlayerAI();\r\n      this.player.container = new _container__WEBPACK_IMPORTED_MODULE_7__[\"default\"](26);\r\n      this.player.fov = new _fov__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.width, this.height);\r\n\r\n      this.player.x = this.map.startX;\r\n      this.player.y = this.map.startY;\r\n      this.player.fov.fullClear();\r\n      this.log.add(\"Welcome stranger!\", \"#FFF\");\r\n    } else {\r\n      this.log.add(\"Welcome back stranger!\", \"#FFF\");\r\n    }\r\n  }\r\n\r\n  async load() {\r\n    console.log(\"load game\");\r\n\r\n    if (localStorage.getItem(\"version\") !== \"75970c8\\n\")\r\n      localStorage.clear();\r\n\r\n    if (localStorage.getItem(\"seed\") !== null) {\r\n      //console.log(\"load game\");\r\n      const savedVersion = localStorage.getItem(\"version\");\r\n      if (savedVersion === null) localStorage.setItem(\"version\", \"75970c8\\n\");\r\n\r\n      this.masterSeed = localStorage.getItem(\"seed\");\r\n      await this.init(false);\r\n      /*\r\n      this.player.load();\r\n      //console.log(\"load \" + localStorage.getItem(\"actors\") + \" amount of actors\");\r\n      const actorAmount = localStorage.getItem(\"actors\");\r\n      for (let i = 0; i < actorAmount; i++)\r\n      {\r\n        let actor = new Actor(0, 0, null, null, \"#FF00FF\");\r\n        actor.load();\r\n        this.actors.push(actor);\r\n      }\r\n      */\r\n\r\n      const tempUsers = JSON.parse(localStorage.getItem(\"actors\") || \"[]\");\r\n      const playerID = localStorage.getItem(\"playerID\");\r\n\r\n      //console.log(\"temps: \" + tempUsers.length);\r\n\r\n      for (const actor of tempUsers) {\r\n        const i =\r\n          this.actors.push(\r\n            new _actor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](actor.x, actor.y, actor.ch, actor.name, actor.color)\r\n          ) - 1;\r\n\r\n        this.actors[i].ai = null;\r\n\r\n        if (actor.fov) {\r\n          this.actors[i].fov = new _fov__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.width, this.height);\r\n          this.actors[i].fov.mapped = actor.fov.mapped;\r\n        }\r\n\r\n        if (actor.container) {\r\n          console.log(actor);\r\n          this.actors[i].container = await new _container__WEBPACK_IMPORTED_MODULE_7__[\"default\"](26);\r\n\r\n          for (const it of actor.container.inventory) {\r\n            const k =\r\n              this.actors[i].container.inventory.push(\r\n                new _actor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](it.x, it.y, it.ch, it.name, it.color)\r\n              ) - 1;\r\n            this.actors[i].container.inventory[k].create(it);\r\n          }\r\n        }\r\n\r\n        if (actor.attacker) {\r\n          this.actors[i].attacker = new _attacker__WEBPACK_IMPORTED_MODULE_4__[\"default\"](actor.attacker.power);\r\n        }\r\n\r\n        if (actor.pickable) {\r\n          this.actors[i].create(actor);\r\n        }\r\n\r\n        if (actor.destructible) {\r\n          if (actor.destructible.type === \"player\") {\r\n            this.player = this.actors[i];\r\n            this.actors[i].destructible = new _destructible__WEBPACK_IMPORTED_MODULE_3__.PlayerDestructible(\r\n              30,\r\n              2,\r\n              \"player corpse\"\r\n            );\r\n\r\n            this.actors[i].ai = new _ai__WEBPACK_IMPORTED_MODULE_5__.PlayerAI();\r\n\r\n            this.actors[i].destructible.hp = actor.destructible.hp;\r\n            this.actors[i].destructible.maxHP = actor.destructible.maxHP;\r\n            this.actors[i].destructible.defense = actor.destructible.defense;\r\n            this.actors[i].destructible.corpseName =\r\n              actor.destructible.corpseName;\r\n          }\r\n          if (actor.destructible.type === \"monster\") {\r\n            this.actors[i].destructible = new _destructible__WEBPACK_IMPORTED_MODULE_3__.MonsterDestructible(\r\n              1,\r\n              1,\r\n              \"monster corpse\"\r\n            );\r\n\r\n            this.actors[i].destructible.hp = actor.destructible.hp;\r\n            this.actors[i].destructible.maxHP = actor.destructible.maxHP;\r\n            this.actors[i].destructible.defense = actor.destructible.defense;\r\n            this.actors[i].destructible.corpseName =\r\n              actor.destructible.corpseName;\r\n\r\n            this.actors[i].ai = new _ai__WEBPACK_IMPORTED_MODULE_5__.MonsterAI();\r\n          }\r\n        }\r\n      }\r\n\r\n      //console.log(this.actors);\r\n    } else {\r\n      //console.log(\"new game\");\r\n      await this.init(true);\r\n      await this.save();\r\n    }\r\n  }\r\n\r\n  async save() {\r\n    console.log(\"save game\");\r\n    if (this.player.destructible.isDead()) {\r\n      console.log(\"storage cleared\");\r\n      localStorage.clear();\r\n    } else {\r\n      this.map.save();\r\n      localStorage.setItem(\"playerID\", this.actors.indexOf(this.player));\r\n      localStorage.setItem(\"actors\", JSON.stringify(this.actors));\r\n      localStorage.setItem(\"version\", \"75970c8\\n\");\r\n      //console.log(this.actors);\r\n    }\r\n  }\r\n\r\n  clear(color = \"#000\") {\r\n    //Game\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.fillRect(\r\n      0,\r\n      0,\r\n      this.width * this.fontSize,\r\n      this.height * this.fontSize\r\n    );\r\n\r\n    //\"UI\"\r\n    this.ctx.fillRect(\r\n      0,\r\n      this.height * this.fontSize,\r\n      this.width * this.fontSize,\r\n      this.canvas.height - this.height * this.fontSize\r\n    );\r\n  }\r\n\r\n  drawChar(ch, x, y, color = \"#000\") {\r\n    this.ctx.textAlign = \"center\";\r\n    this.ctx.fillStyle = \"#040414\";\r\n    this.ctx.fillRect(\r\n      x * this.fontSize - this.fontSize / 2,\r\n      y * this.fontSize,\r\n      this.fontSize,\r\n      this.fontSize\r\n    );\r\n\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.fillText(ch, x * this.fontSize, y * this.fontSize + this.fontSize);\r\n  }\r\n\r\n  drawText(text, x, y, color = \"#AAA\") {\r\n    this.ctx.textAlign = \"left\";\r\n    /*\r\n    for (let i = 0; i < text.length; i++) {\r\n      this.drawChar(text.charAt(i), x + i, y, color);\r\n    }\r\n    */\r\n    this.ctx.fillStyle = \"#040414\";\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.fillText(\r\n      text,\r\n      x * this.fontSize,\r\n      y * this.fontSize + this.fontSize\r\n    );\r\n  }\r\n\r\n  async run() {\r\n    await this.load();\r\n    await this.gameloop();\r\n    await this.save();\r\n  }\r\n\r\n  waitingKeypress() {\r\n    return new Promise((resolve) => {\r\n      document.addEventListener(\"keydown\", onKeyHandler);\r\n      function onKeyHandler(e) {\r\n        if (e.keyCode !== 0) {\r\n          document.removeEventListener(\"keydown\", onKeyHandler);\r\n          game.lastKey = e.key;\r\n          resolve();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  //wait keypress and return key\r\n  async getch() {\r\n    await this.waitingKeypress();\r\n    const tempKey = this.lastKey;\r\n    this.lastKey = 0;\r\n    return tempKey;\r\n  }\r\n\r\n  render() {\r\n    this.clear();\r\n\r\n    this.map.render();\r\n    this.drawChar(\"@\", this.playerX, this.playerY, \"#AAA\");\r\n\r\n    for (let i = 0; i < this.actors.length; i++) this.actors[i].render();\r\n\r\n    this.renderUI();\r\n  }\r\n\r\n  renderUI() {\r\n    for (let x = 0; x < this.width; x++) {\r\n      this.drawChar(\"-\", x, this.height, \"#888\");\r\n    }\r\n\r\n    const hp = this.player.destructible.hp;\r\n    const maxHP = this.player.destructible.maxHP;\r\n    const depth = this.map.depth;\r\n    this.drawText(\"HP: \" + hp + \"/\" + maxHP, 1, this.height + 1);\r\n    this.drawText(\"Depth: \" + depth, this.width - 6, this.height + 1);\r\n\r\n    this.log.render();\r\n  }\r\n\r\n  async gameloop() {\r\n    while (true) {\r\n      if (this.gameStatus === this.GameStatus.STARTUP) {\r\n        this.player.computeFov();\r\n        this.render();\r\n      }\r\n      this.gameStatus = this.GameStatus.IDLE;\r\n\r\n      await this.player.update();\r\n\r\n      if (this.gameStatus === this.GameStatus.NEW_TURN) {\r\n        for (const actor of this.actors) {\r\n          if (actor !== this.player) {\r\n            await actor.update();\r\n          }\r\n        }\r\n      }\r\n\r\n      //finally draw screen\r\n      this.render();\r\n\r\n      if (this.gameStatus === this.GameStatus.DEFEAT) {\r\n        this.drawText(\"DEFEAT!\", this.width / 2 - 3, this.height / 2, \"#A00\");\r\n        this.log.add(\"DEFEAT\", \"#A00\");\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeActor(actor) {\r\n    for (let i = 0; i < this.actors.length; i++) {\r\n      if (this.actors[i] === actor) {\r\n        this.actors.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  sendToBack(actor) {\r\n    this.removeActor(actor);\r\n    this.actors.unshift(actor);\r\n  }\r\n\r\n  getClosestMonster(x, y, range) {\r\n    let closest = null;\r\n    let bestDistance = 100000;\r\n\r\n    for (const actor of this.actors) {\r\n      if (\r\n        actor != this.player &&\r\n        actor.destructible &&\r\n        !actor.destructible.isDead()\r\n      ) {\r\n        const distance = actor.getDistance(x, y);\r\n        if (distance < bestDistance && (distance <= range || range == 0.0)) {\r\n          bestDistance = distance;\r\n          closest = actor;\r\n        }\r\n      }\r\n    }\r\n    return closest;\r\n  }\r\n\r\n  getActor(x, y) {\r\n    for (const actor of this.actors) {\r\n      if (\r\n        actor.x === x &&\r\n        actor.y === y &&\r\n        actor.destructible &&\r\n        !actor.destructible.isDead()\r\n      ) {\r\n        return actor;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async pickATile(x, y, range = 0.0) {\r\n    let px = x;\r\n    let py = y;\r\n    let inRange = false;\r\n\r\n    while (true) {\r\n      this.render();\r\n      if (\r\n        this.player.fov.isInFov(px, py) &&\r\n        (range == 0 || this.player.getDistance(px, py) <= range)\r\n      ) {\r\n        this.drawChar(\"+\", px, py, \"#FFF\");\r\n        inRange = true;\r\n      } else {\r\n        this.drawChar(\"+\", px, py, \"#F88\");\r\n        inRange = false;\r\n      }\r\n\r\n      const ch = await this.getch();\r\n      if (ch === \"ArrowLeft\") px--;\r\n      if (ch === \"ArrowRight\") px++;\r\n      if (ch === \"ArrowUp\") py--;\r\n      if (ch === \"ArrowDown\") py++;\r\n      if (ch === \"Escape\") break;\r\n      if (ch === \"Enter\") {\r\n        if (inRange) {\r\n          return [true, px, py];\r\n        }\r\n      }\r\n    }\r\n\r\n    return [false, px, py];\r\n  }\r\n}\r\n\r\nconst game = new Game();\r\n\r\ngame.run();\r\n\n\n//# sourceURL=webpack://slanrl/./src/index.js?");

/***/ }),

/***/ "./src/log.js":
/*!********************!*\
  !*** ./src/log.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Log)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n\r\n\r\n\r\n\r\nclass LogText {\r\n  constructor(text, color) {\r\n    this.text = text;\r\n    this.color = color;\r\n  }\r\n}\r\n\r\nclass Log {\r\n  constructor() {\r\n    this.constants = Object.freeze({\r\n      SIZE_OF_LOG: 100,\r\n    });\r\n\r\n    this.texts = new Array();\r\n  }\r\n\r\n  render() {\r\n    let a = 0;\r\n    for (let i = this.texts.length - 16; i < this.texts.length; i++) {\r\n      if (i >= 0) {\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.drawText(\r\n          this.texts[i].text,\r\n          1,\r\n          ___WEBPACK_IMPORTED_MODULE_0__.game.height + 3 + a,\r\n          this.texts[i].color\r\n        );\r\n        a++;\r\n      }\r\n    }\r\n  }\r\n\r\n  add(text, color = \"#AAA\") {\r\n    //console.log(text);\r\n    this.texts.push(new LogText(text, color));\r\n    if (this.texts.length > this.constants.SIZE_OF_LOG) {\r\n      this.texts.splice(0, 1);\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://slanrl/./src/log.js?");

/***/ }),

/***/ "./src/map.js":
/*!********************!*\
  !*** ./src/map.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"default\": () => (/* binding */ Map)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _actor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actor */ \"./src/actor.js\");\n/* harmony import */ var _ai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ai */ \"./src/ai.js\");\n/* harmony import */ var _attacker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attacker */ \"./src/attacker.js\");\n/* harmony import */ var _bsp_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bsp_generator */ \"./src/bsp_generator.js\");\n/* harmony import */ var _destructible__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./destructible */ \"./src/destructible.js\");\n/* harmony import */ var _pickable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pickable */ \"./src/pickable.js\");\n/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./random */ \"./src/random.js\");\n/* harmony import */ var _rectangle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rectangle */ \"./src/rectangle.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst random = new _random__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\r\n\r\nclass Tile {\r\n  constructor() {\r\n    this.canWalk = false;\r\n    this.explored = false;\r\n  }\r\n}\r\n\r\nclass Map {\r\n  constructor(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.startX = 0;\r\n    this.startY = 0;\r\n\r\n    this.constants = Object.freeze({\r\n      ROOM_MAX_SIZE: 10,\r\n      ROOM_MIN_SIZE: 4,\r\n      MAX_ROOM_MONSTERS: 3,\r\n      MAX_ROOM_ITEMS: 2,\r\n    });\r\n\r\n    this.root = null;\r\n    this.levelSeed = 0;\r\n    this.depth = 0;\r\n  }\r\n\r\n  save() {\r\n    //console.log(\"map save, wip\");\r\n    localStorage.setItem(\"seed\", this.levelSeed);\r\n    localStorage.setItem(\"depth\", this.depth);\r\n  }\r\n\r\n  load() {\r\n    console.log(\"map load, wip\");\r\n  }\r\n\r\n  isWall(x, y) {\r\n    const index = x + y * this.width;\r\n    return !this.tiles[index].canWalk;\r\n  }\r\n\r\n  setWall(x, y) {\r\n    this.tiles[x + y * this.width].canWalk = false;\r\n  }\r\n\r\n  canWalk(x, y) {\r\n    if (this.isWall(x, y)) return false;\r\n    for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\r\n      if (actor.x === x && actor.y === y && actor.blocks) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  addMonster(x, y) {\r\n    const rng = random.getInt(0, 100);\r\n\r\n    if (rng < 80) {\r\n      let orc = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, \"o\", \"lan orc\", \"#00AA00\");\r\n\r\n      orc.destructible = new _destructible__WEBPACK_IMPORTED_MODULE_5__.MonsterDestructible(10, 0, \"wasted lan orc\");\r\n      orc.attacker = new _attacker__WEBPACK_IMPORTED_MODULE_3__[\"default\"](3);\r\n      orc.ai = new _ai__WEBPACK_IMPORTED_MODULE_2__.MonsterAI();\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(orc);\r\n    } else {\r\n      let troll = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, \"t\", \"lan troll\", \"#008800\");\r\n\r\n      troll.destructible = new _destructible__WEBPACK_IMPORTED_MODULE_5__.MonsterDestructible(10, 0, \"wasted lan troll\");\r\n      troll.attacker = new _attacker__WEBPACK_IMPORTED_MODULE_3__[\"default\"](3);\r\n      troll.ai = new _ai__WEBPACK_IMPORTED_MODULE_2__.MonsterAI();\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(troll);\r\n    }\r\n  }\r\n\r\n  additem(x, y) {\r\n    const rng = random.getInt(0, 100);\r\n    if (rng < 70) {\r\n      if (random.getInt(0, 100) < 95) {\r\n        const healthPotion = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, \"!\", \"health potion\", \"#FF00FF\");\r\n        healthPotion.blocks = false;\r\n        healthPotion.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.Healer(4);\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(healthPotion);\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(healthPotion);\r\n      } else {\r\n        const healthPotion = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, \"@\", \"Nutella bun\", \"#A80\");\r\n        healthPotion.blocks = false;\r\n        healthPotion.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.Healer(30);\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(healthPotion);\r\n        ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(healthPotion);\r\n        console.log(\"Jossain haisoo nutella!\");\r\n      }\r\n    } else if (rng < 70 + 10) {\r\n      const scrollOfLightingBolt = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\r\n        x,\r\n        y,\r\n        \"#\",\r\n        \"scroll of lighting bolt\",\r\n        \"#0FF\"\r\n      );\r\n      scrollOfLightingBolt.blocks = false;\r\n      scrollOfLightingBolt.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.LightningBolt(5, 20);\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(scrollOfLightingBolt);\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(scrollOfLightingBolt);\r\n    } else if (rng < 70 + 20) {\r\n      const scrollOfFireball = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\r\n        x,\r\n        y,\r\n        \"#\",\r\n        \"scroll of Fireball\",\r\n        \"#FA0\"\r\n      );\r\n      scrollOfFireball.blocks = false;\r\n      scrollOfFireball.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.Fireball(2, 5);\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(scrollOfFireball);\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(scrollOfFireball);\r\n    } else {\r\n      const scrollOfConfusion = new _actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\r\n        x,\r\n        y,\r\n        \"#\",\r\n        \"scroll of Confusion\",\r\n        \"#FFA\"\r\n      );\r\n      scrollOfConfusion.blocks = false;\r\n      scrollOfConfusion.pickable = new _pickable__WEBPACK_IMPORTED_MODULE_6__.Confuser(10, 8);\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(scrollOfConfusion);\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(scrollOfConfusion);\r\n      console.log(\"conf!\");\r\n    }\r\n  }\r\n\r\n  dig(x1, y1, x2, y2) {\r\n    x1 = x1 | 0;\r\n    x2 = x2 | 0;\r\n    y1 = y1 | 0;\r\n    y2 = y2 | 0;\r\n\r\n    if (x2 < x1) {\r\n      const tmp = x2;\r\n      x2 = x1;\r\n      x1 = tmp;\r\n    }\r\n\r\n    if (y2 < y1) {\r\n      const tmp = y2;\r\n      y2 = y1;\r\n      y1 = tmp;\r\n    }\r\n\r\n    for (let tilex = x1; tilex <= x2; tilex++) {\r\n      for (let tiley = y1; tiley <= y2; tiley++) {\r\n        const index = tilex + tiley * this.width;\r\n        this.tiles[index].canWalk = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  addActors(room) {\r\n    let numberOfMonsters = random.getInt(0, this.constants.MAX_ROOM_MONSTERS);\r\n    let numberOfItems = random.getInt(0, this.constants.MAX_ROOM_ITEMS);\r\n    console.log(room);\r\n    const x1 = room.x;\r\n    const x2 = room.x + room.w;\r\n    const y1 = room.y;\r\n    const y2 = room.y + room.h;\r\n\r\n    while (numberOfMonsters > 0) {\r\n      const x = random.getInt(x1, x2);\r\n      const y = random.getInt(y1, y2);\r\n      if (this.canWalk(x, y)) {\r\n        this.addMonster(x, y);\r\n      }\r\n      numberOfMonsters--;\r\n    }\r\n\r\n    while (numberOfItems > 0) {\r\n      const x = random.getInt(x1, x2);\r\n      const y = random.getInt(y1, y2);\r\n      if (this.canWalk(x, y)) {\r\n        this.additem(x, y);\r\n      }\r\n      numberOfItems--;\r\n    }\r\n  }\r\n\r\n  createRoom(x1, y1, x2, y2) {\r\n    this.dig(x1, y1, x2, y2);\r\n  }\r\n\r\n  generate(withActors, seed, depth) {\r\n    this.levelSeed = seed;\r\n    this.depth = depth;\r\n\r\n    random.setSeed(this.levelSeed);\r\n    console.log(\"seed: \" + this.levelSeed);\r\n    console.log(\"depth: \" + this.depth);\r\n\r\n    this.root = new _bsp_generator__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 0, this.width, this.height, 5);\r\n    this.tiles = new Array(this.width * this.height).fill(false);\r\n\r\n    let monsterRooms = new Array();\r\n\r\n    //const option = random.getInt(0, 2);\r\n    //console.log(\"option: \" + option);\r\n    const option = 2;\r\n\r\n    for (let i = 0; i < this.width * this.height; i++) {\r\n      this.tiles[i] = new Tile();\r\n\r\n      //we can use path/room data directly from bsp if we want.\r\n      if (option === 0) this.tiles[i].canWalk = !this.root.map[i];\r\n    }\r\n\r\n    //lets create every room one by one\r\n    let lastx = 0;\r\n    let lasty = 0;\r\n    let x = 0;\r\n    let y = 0;\r\n    let w = 0;\r\n    let h = 0;\r\n    for (let i = 0; i < this.root.rooms.length; i++) {\r\n      const room = this.root.rooms[i];\r\n      const firstRoom = i > 0 ? false : true;\r\n\r\n      if (i === 0) {\r\n        this.startX = (room.x + room.w / 2) | 0;\r\n        this.startY = (room.y + room.h / 2) | 0;\r\n      }\r\n\r\n      //option 1\r\n      if (option === 1) {\r\n        w = room.w;\r\n        h = room.h;\r\n        x = room.x + 1;\r\n        y = room.y + 1;\r\n\r\n        this.createRoom(x, y, x + w - 2, y + h - 2);\r\n        if (!firstRoom) monsterRooms.push(new _rectangle__WEBPACK_IMPORTED_MODULE_8__[\"default\"](x, y, w - 2, h - 2));\r\n      }\r\n\r\n      //option 2\r\n      if (option === 2) {\r\n        w = random.getInt(this.constants.ROOM_MIN_SIZE, room.w - 2);\r\n        h = random.getInt(this.constants.ROOM_MIN_SIZE, room.h - 2);\r\n        x = random.getInt(room.x, room.x + room.w - w - 0) + 1;\r\n        y = random.getInt(room.y, room.y + room.h - h - 0) + 1;\r\n\r\n        this.createRoom(x, y, x + w - 2, y + h - 2);\r\n        if (!firstRoom) monsterRooms.push(new _rectangle__WEBPACK_IMPORTED_MODULE_8__[\"default\"](x, y, w - 2, h - 2));\r\n      }\r\n\r\n      if (option === 1 || option === 2) {\r\n        if (i > 0) {\r\n          this.dig(lastx, lasty, x + w / 2, lasty);\r\n          this.dig(x + w / 2, lasty, x + w / 2, y + h / 2);\r\n        }\r\n        lastx = x + w / 2;\r\n        lasty = y + h / 2;\r\n      }\r\n    }\r\n    if (withActors) {\r\n      for (const room of monsterRooms) {\r\n        this.addActors(room);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const darkWall = \"#\";\r\n    const darkGround = \".\";\r\n\r\n    for (let y = 0; y < this.height; y++) {\r\n      for (let x = 0; x < this.width; x++) {\r\n        const fovValue = ___WEBPACK_IMPORTED_MODULE_0__.game.player.fov.getMapped(x, y);\r\n        if (fovValue === 2 || fovValue === 1) {\r\n          if (fovValue === 2) {\r\n            ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\r\n              this.isWall(x, y) ? darkWall : darkGround,\r\n              x,\r\n              y,\r\n              \"#AAA\"\r\n            );\r\n          } else {\r\n            ___WEBPACK_IMPORTED_MODULE_0__.game.drawChar(\r\n              this.isWall(x, y) ? darkWall : darkGround,\r\n              x,\r\n              y,\r\n              \"#444\"\r\n            );\r\n          }\r\n        } else {\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://slanrl/./src/map.js?");

/***/ }),

/***/ "./src/persistent.js":
/*!***************************!*\
  !*** ./src/persistent.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Persistent\": () => (/* binding */ Persistent)\n/* harmony export */ });\n\r\n\r\nclass Persistent {\r\n  constructor() {\r\n\r\n  } \r\n  \r\n  deleteFile() {\r\n    console.log(\"Delete file\");\r\n  }\r\n\r\n\r\n}\n\n//# sourceURL=webpack://slanrl/./src/persistent.js?");

/***/ }),

/***/ "./src/pickable.js":
/*!*************************!*\
  !*** ./src/pickable.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Pickable),\n/* harmony export */   \"Healer\": () => (/* binding */ Healer),\n/* harmony export */   \"LightningBolt\": () => (/* binding */ LightningBolt),\n/* harmony export */   \"Fireball\": () => (/* binding */ Fireball),\n/* harmony export */   \"Confuser\": () => (/* binding */ Confuser)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _ai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ai */ \"./src/ai.js\");\n\r\n\r\n\r\n\r\n\r\nclass Pickable {\r\n  constructor(type = \"unknow\") {\r\n    this.type = type;\r\n  }\r\n\r\n  pick(owner, wearer) {\r\n    if (wearer.container && wearer.container.add(owner)) {\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.removeActor(owner);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  use(owner, wearer) {\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"You use a \" + owner.name);\r\n    if (wearer.container) {\r\n      wearer.container.remove(owner);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  drop(owner, wearer) {\r\n    if (wearer.container) {\r\n      wearer.container.remove(owner);\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.actors.push(owner);\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.sendToBack(owner);\r\n      owner.x = wearer.x;\r\n      owner.y = wearer.y;\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(wearer.name + \" drops a \" + owner.name);\r\n    }\r\n  }\r\n}\r\n\r\nclass Healer extends Pickable {\r\n  constructor(amount) {\r\n    super(\"healer\");\r\n    this.amount = amount;\r\n  }\r\n\r\n  use(owner, wearer) {\r\n    if (wearer.destructible) {\r\n      const amountHealed = wearer.destructible.heal(this.amount);\r\n      if (amountHealed > 0) {\r\n        return super.use(owner, wearer);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nclass LightningBolt extends Pickable {\r\n  constructor(range, damage) {\r\n    super(\"lightingBolt\");\r\n    this.range = range;\r\n    this.damage = damage;\r\n  }\r\n\r\n  use(owner, wearer) {\r\n    const closestMonster = ___WEBPACK_IMPORTED_MODULE_0__.game.getClosestMonster(\r\n      wearer.x,\r\n      wearer.y,\r\n      this.range\r\n    );\r\n    if (!closestMonster) {\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"No enemy is close enough to strike.\");\r\n      return false;\r\n    }\r\n\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\r\n      \"A lighting bolt strikes the \" +\r\n        closestMonster.name +\r\n        \" with a loud thunder!\",\r\n      \"#0FF\"\r\n    );\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"The damage is \" + this.damage + \" hit points.\", \"#0FF\");\r\n\r\n    closestMonster.destructible.takeDamage(closestMonster, this.damage);\r\n    return super.use(owner, wearer);\r\n  }\r\n}\r\n\r\nclass Fireball extends Pickable {\r\n  constructor(range, damage) {\r\n    super(\"fireBall\");\r\n    this.range = range;\r\n    this.damage = damage;\r\n  }\r\n\r\n  async use(owner, wearer) {\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\r\n      \"Use arrow keys to target tile for fireball. Enter to select target. Esc to cancel.\"\r\n    );\r\n    const tilePick = await ___WEBPACK_IMPORTED_MODULE_0__.game.pickATile(wearer.x, wearer.y);\r\n\r\n    if (tilePick[0] == true) {\r\n      ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\r\n        \"The fireball explodes, burning everything within \" +\r\n          this.range +\r\n          \" tiles!\",\r\n        \"#FA0\"\r\n      );\r\n\r\n      //for (let i = 0; i < game.actors.length; i++) {\r\n      for (const actor of ___WEBPACK_IMPORTED_MODULE_0__.game.actors) {\r\n        if (\r\n          actor.destructible &&\r\n          !actor.destructible.isDead() &&\r\n          actor.getDistance(tilePick[1], tilePick[2]) < this.range\r\n        ) {\r\n          ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\r\n            \"The \" +\r\n              actor.name +\r\n              \" gets burned for \" +\r\n              this.damage +\r\n              \" hit points.\",\r\n            \"#FA0\"\r\n          );\r\n          actor.destructible.takeDamage(actor, this.damage);\r\n        }\r\n      }\r\n\r\n      return super.use(owner, wearer);\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nclass Confuser extends Pickable {\r\n  constructor(nbTurns, range) {\r\n    super(\"confuser\");\r\n    this.nbTurns = nbTurns;\r\n    this.range = range;\r\n  }\r\n\r\n  async use(owner, wearer) {\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\r\n      \"Arrow keys to select a creature. Enter to select target. Esc to cancel.\"\r\n    );\r\n    const tilePick = await ___WEBPACK_IMPORTED_MODULE_0__.game.pickATile(wearer.x, wearer.y);\r\n    console.log(tilePick);\r\n    \r\n    if (tilePick == null || tilePick[0] === false) {\r\n      return false;\r\n    }\r\n\r\n    const actor = ___WEBPACK_IMPORTED_MODULE_0__.game.getActor(tilePick[1], tilePick[2]);\r\n    if (!actor) {\r\n      return false;\r\n    }\r\n\r\n    const ai = new _ai__WEBPACK_IMPORTED_MODULE_1__.ConfusedAI(this.nbTurns, actor.ai);\r\n    actor.ai = ai;\r\n    \r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"The eyes of the \" + actor.name + \" look vacant\",  \"#AFD\");\r\n    ___WEBPACK_IMPORTED_MODULE_0__.game.log.add(\"as he starts to stumble around!\",  \"#AFD\");\r\n\r\n    return super.use(owner, wearer);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://slanrl/./src/pickable.js?");

/***/ }),

/***/ "./src/random.js":
/*!***********************!*\
  !*** ./src/random.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\r\n\r\nlet _seed = 0;\r\n\r\nclass Randomizer {\r\n  constructor() {\r\n    this.seed = 0;\r\n    this.rnd = 0;\r\n  }\r\n\r\n  setSeed(seed) {\r\n    _seed = seed;\r\n  }\r\n\r\n  calc() {\r\n    _seed = (_seed * 9301 + 49297) % 233280;\r\n    this.rnd = _seed / 233280.0;\r\n  }\r\n\r\n  getInt(min, max) {\r\n    max = max || 1;\r\n    min = min || 0;\r\n    this.calc();\r\n    return Math.floor(min + this.rnd * (max - min));\r\n  }\r\n\r\n  dice(dices, eyes, bonus = 0) {\r\n    let v = 0;\r\n    eyes++;\r\n    for (let i = 0; i < dices; i++) {\r\n      v += Number(this.getInt(1, eyes));\r\n    }\r\n    v += +bonus;\r\n    if (v < dices) v = dices;\r\n    return v;\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Randomizer);\r\n\n\n//# sourceURL=webpack://slanrl/./src/random.js?");

/***/ }),

/***/ "./src/rectangle.js":
/*!**************************!*\
  !*** ./src/rectangle.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\r\n\r\nclass Rectangle {\r\n  constructor(x, y, w, h) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = w;\r\n    this.h = h;\r\n  }\r\n\r\n  GetHalfDimensionX() {\r\n    return this.w / 2;\r\n  }\r\n  GetHalfDimensionY() {\r\n    return this.h / 2;\r\n  }\r\n\r\n  GetCenterX() {\r\n    return this.x + this.GetHalfDimensionX();\r\n  }\r\n\r\n  GetCenterY() {\r\n    return this.y + this.GetHalfDimensionY();\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Rectangle);\r\n\n\n//# sourceURL=webpack://slanrl/./src/rectangle.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;